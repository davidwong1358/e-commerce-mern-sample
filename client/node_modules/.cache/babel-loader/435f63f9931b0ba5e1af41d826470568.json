{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kongk\\\\Desktop\\\\ecommerce-mern\\\\client\\\\src\\\\pages\\\\modifyPassword.jsx\";\n\nimport React from 'react';\nimport { Form, FloatingLabel, InputGroup, Button } from \"react-bootstrap\";\nimport { Formik } from 'formik';\nimport { XCircleFill } from \"react-bootstrap-icons\";\nimport * as Yup from 'yup';\nvar initialize = {\n  user: '',\n  newPassword: '',\n  confirmPassword: ''\n};\nvar schema = Yup.object().shape({\n  user: Yup.string().required('Please enter username or email.'),\n  newPassword: Yup.string().max(20, 'Maximum 20 character').min(6, 'Minimum 6 characters.').required('Password is required'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must be match')\n});\n\nvar ModifyPassword = function ModifyPassword() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"password-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialize,\n    validationSchema: schema,\n    onSubmit: function onSubmit(values) {\n      alert(JSON.stringify(values, null, 2));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleSubmit = _ref.handleSubmit,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, \"Username or Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username or Email Address\",\n      name: \"user\",\n      value: values.user,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: touched.user && !!errors.user,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      tooltip: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(XCircleFill, {\n      className: \"me-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }), errors.user));\n  }));\n};\n\nexport default ModifyPassword;","map":{"version":3,"names":["React","Form","FloatingLabel","InputGroup","Button","Formik","XCircleFill","Yup","initialize","user","newPassword","confirmPassword","schema","object","shape","string","required","max","min","oneOf","ref","ModifyPassword","values","alert","JSON","stringify","errors","touched","handleSubmit","handleChange","handleBlur"],"sources":["C:/Users/kongk/Desktop/ecommerce-mern/client/src/pages/modifyPassword.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Form, FloatingLabel, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from 'formik';\r\nimport { XCircleFill } from \"react-bootstrap-icons\";\r\nimport * as Yup from 'yup';\r\n\r\nconst initialize = {\r\n    user: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n};\r\n\r\nconst schema = Yup.object().shape({\r\n    user: Yup.string().required('Please enter username or email.'),\r\n    newPassword: Yup.string()\r\n        .max(20, 'Maximum 20 character')\r\n        .min(6, 'Minimum 6 characters.')\r\n        .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Password must be match')\r\n});\r\n\r\nconst ModifyPassword = () => {\r\n    return (\r\n        <div id='password-form'>\r\n            <Formik\r\n                initialValues={initialize}\r\n                validationSchema={schema}\r\n                onSubmit={(values) => {\r\n                    alert(JSON.stringify(values, null, 2));\r\n                }}\r\n            >\r\n                {({ values, errors, touched, handleSubmit, handleChange, handleBlur }) => (\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Username or Email address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Username or Email Address\"\r\n                                name=\"user\"\r\n                                value={values.user}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                isInvalid={touched.user && !!errors.user} />\r\n                        </Form.Group>\r\n                        <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                            <XCircleFill className=\"me-2\" />{errors.user}\r\n                        </Form.Control.Feedback>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModifyPassword;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,iBAAxD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,IAAMC,UAAU,GAAG;EACfC,IAAI,EAAE,EADS;EAEfC,WAAW,EAAE,EAFE;EAGfC,eAAe,EAAE;AAHF,CAAnB;AAMA,IAAMC,MAAM,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;EAC9BL,IAAI,EAAEF,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,iCAAtB,CADwB;EAE9BN,WAAW,EAAEH,GAAG,CAACQ,MAAJ,GACRE,GADQ,CACJ,EADI,EACA,sBADA,EAERC,GAFQ,CAEJ,CAFI,EAED,uBAFC,EAGRF,QAHQ,CAGC,sBAHD,CAFiB;EAM9BL,eAAe,EAAEJ,GAAG,CAACQ,MAAJ,GACZI,KADY,CACN,CAACZ,GAAG,CAACa,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADM,EACuB,wBADvB;AANa,CAAnB,CAAf;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EACzB,oBACI;IAAK,EAAE,EAAC,eAAR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,MAAD;IACI,aAAa,EAAEb,UADnB;IAEI,gBAAgB,EAAEI,MAFtB;IAGI,QAAQ,EAAE,kBAACU,MAAD,EAAY;MAClBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACH,CALL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAOK;IAAA,IAAGA,MAAH,QAAGA,MAAH;IAAA,IAAWI,MAAX,QAAWA,MAAX;IAAA,IAAmBC,OAAnB,QAAmBA,OAAnB;IAAA,IAA4BC,YAA5B,QAA4BA,YAA5B;IAAA,IAA0CC,YAA1C,QAA0CA,YAA1C;IAAA,IAAwDC,UAAxD,QAAwDA,UAAxD;IAAA,oBACG,oBAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,IAAD,CAAM,KAAN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,IAAD,CAAM,KAAN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,+BADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAC,2BAFhB;MAGI,IAAI,EAAC,MAHT;MAII,KAAK,EAAER,MAAM,CAACb,IAJlB;MAKI,QAAQ,EAAEoB,YALd;MAMI,MAAM,EAAEC,UANZ;MAOI,SAAS,EAAEH,OAAO,CAAClB,IAAR,IAAgB,CAAC,CAACiB,MAAM,CAACjB,IAPxC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFJ,CADJ,eAYI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;MAAuB,IAAI,EAAC,SAA5B;MAAsC,OAAO,MAA7C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,WAAD;MAAa,SAAS,EAAC,MAAvB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,EACqCiB,MAAM,CAACjB,IAD5C,CAZJ,CADH;EAAA,CAPL,CADJ,CADJ;AA+BH,CAhCD;;AAkCA,eAAeY,cAAf"},"metadata":{},"sourceType":"module"}