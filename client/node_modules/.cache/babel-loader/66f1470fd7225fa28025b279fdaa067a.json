{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kongk\\\\Desktop\\\\ecommerce-mern\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\kongk\\\\Desktop\\\\ecommerce-mern\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\kongk\\\\Desktop\\\\ecommerce-mern\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kongk\\\\Desktop\\\\ecommerce-mern\\\\client\\\\src\\\\pages\\\\register.jsx\";\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { Formik } from 'formik';\nimport { Form, FloatingLabel, InputGroup } from \"react-bootstrap\";\nimport { XCircleFill, CircleFill } from \"react-bootstrap-icons\";\nimport * as Yup from 'yup';\nimport PasswordVisible from \"../component/PasswordVisible\";\nimport '../style/Register.css';\nvar schema = Yup.object().shape({\n  username: Yup.string().max(20, 'Maximum 20 character').min(6, 'Minimun 6 characters.').matches(/^[\\w+-]{6,20}$/, 'Only letters, numbers hyphen (-) & underscore ( _ ) is allowed.').required('Please enter username'),\n  email: Yup.string().email('Invalid email address').required('Email is required!'),\n  confirmEmail: Yup.string().oneOf([Yup.ref('email'), null], 'Email must match'),\n  password: Yup.string().max(20, 'Maximum 20 character').min(6, 'Minimum 6 characters.').required('Password is required'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n});\nvar initialize = {\n  username: '',\n  email: '',\n  confirmEmail: '',\n  password: '',\n  confirmPassword: ''\n};\n\nvar Register = function Register() {\n  var _useState = useState({\n    passwordBtn: false,\n    confirmPwBtn: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPassword = _useState2[0],\n      setShowPassword = _useState2[1];\n\n  var togglePassword = function togglePassword(id) {\n    console.log(showPassword);\n    setShowPassword(function (prevState) {\n      return _objectSpread({}, prevState, _defineProperty({}, id, !prevState[id]));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"reg-form-container\",\n    className: \"p-5 mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialize,\n    validationSchema: schema,\n    onSubmit: function onSubmit(values) {\n      alert(JSON.stringify(values, null, 2));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        handleSubmit = _ref.handleSubmit,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"fs-2 fw-bold mb-4 text-center py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(FloatingLabel, {\n      controlId: \"input-user\",\n      label: \"Username\",\n      className: \"mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username\",\n      name: \"username\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: !!errors.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, !errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CircleFill, {\n      className: \"me-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 42\n      }\n    }), \"Looks good!\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(XCircleFill, {\n      className: \"me-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 42\n      }\n    }), errors.username))), /*#__PURE__*/React.createElement(FloatingLabel, {\n      controlId: \"input-email\",\n      label: \"Email\",\n      className: \"mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: !!errors.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FloatingLabel, {\n      controlId: \"input-confirm-email\",\n      label: \"Confirm Email\",\n      className: \"mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Confirm Email\",\n      name: \"confirmEmail\",\n      value: values.confirmEmail,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: !!errors.confirmEmail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FloatingLabel, {\n      controlId: \"input-password\",\n      label: \"Password\",\n      className: \"col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: showPassword.passwordBtn ? \"text\" : \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      isInvalid: !!errors.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(PasswordVisible, {\n      id: \"toggle-password\",\n      name: \"passwordBtn\",\n      onToggle: togglePassword,\n      showPassword: showPassword.passwordBtn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    })));\n  }));\n};\n\nexport default Register;","map":{"version":3,"names":["React","useState","Formik","Form","FloatingLabel","InputGroup","XCircleFill","CircleFill","Yup","PasswordVisible","schema","object","shape","username","string","max","min","matches","required","email","confirmEmail","oneOf","ref","password","confirmPassword","initialize","Register","passwordBtn","confirmPwBtn","showPassword","setShowPassword","togglePassword","id","console","log","prevState","values","alert","JSON","stringify","errors","handleSubmit","handleChange","handleBlur"],"sources":["C:/Users/kongk/Desktop/ecommerce-mern/client/src/pages/register.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Form, FloatingLabel, InputGroup } from \"react-bootstrap\";\r\nimport { XCircleFill, CircleFill } from \"react-bootstrap-icons\";\r\nimport * as Yup from 'yup';\r\nimport PasswordVisible from \"../component/PasswordVisible\";\r\nimport '../style/Register.css'\r\n\r\nconst schema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .max(20, 'Maximum 20 character')\r\n        .min(6, 'Minimun 6 characters.')\r\n        .matches(/^[\\w+-]{6,20}$/, 'Only letters, numbers hyphen (-) & underscore ( _ ) is allowed.')\r\n        .required('Please enter username'),\r\n    email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Email is required!'),\r\n    confirmEmail: Yup.string()\r\n        .oneOf([Yup.ref('email'), null], 'Email must match'),\r\n    password: Yup.string()\r\n        .max(20, 'Maximum 20 character')\r\n        .min(6, 'Minimum 6 characters.')\r\n        .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n});\r\n\r\nconst initialize = {\r\n    username: '',\r\n    email: '',\r\n    confirmEmail: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n}\r\n\r\n\r\nconst Register = () => {\r\n    const [showPassword, setShowPassword] = useState({\r\n        passwordBtn: false,\r\n        confirmPwBtn: false\r\n    });\r\n\r\n    const togglePassword = (id) => {\r\n        console.log(showPassword);\r\n        setShowPassword(prevState => ({ ...prevState, [id]: !prevState[id] }))\r\n    };\r\n\r\n    return (\r\n        <div id='reg-form-container' className=\"p-5 mx-auto\">\r\n            <Formik\r\n                initialValues={initialize}\r\n                validationSchema={schema}\r\n                onSubmit={(values) => {\r\n                    alert(JSON.stringify(values, null, 2));\r\n                }}\r\n            >\r\n                {\r\n                    ({ values, errors, handleSubmit, handleChange, handleBlur }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <h1 className='fs-2 fw-bold mb-4 text-center py-2'>Register</h1>\r\n\r\n                            <FloatingLabel\r\n                                controlId=\"input-user\"\r\n                                label=\"Username\"\r\n                                className=\"mb-2\"\r\n                            >\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Username\"\r\n                                    name='username'\r\n                                    value={values.username}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={!!errors.username} />\r\n                                <Form.Text>\r\n                                    {!errors.username?\r\n                                    <div><CircleFill className=\"me-1\" />Looks good!</div>:\r\n                                    <div><XCircleFill className=\"me-1\" />{errors.username}</div>\r\n                                    }\r\n                                </Form.Text>\r\n\r\n                            </FloatingLabel>\r\n\r\n                            <FloatingLabel\r\n                                controlId=\"input-email\"\r\n                                label=\"Email\"\r\n                                className=\"mb-2\"\r\n                            >\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    name='email'\r\n                                    value={values.email}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={!!errors.email} />\r\n\r\n                            </FloatingLabel>\r\n\r\n                            <FloatingLabel\r\n                                controlId=\"input-confirm-email\"\r\n                                label=\"Confirm Email\"\r\n                                className=\"mb-2\"\r\n                            >\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Confirm Email\"\r\n                                    name='confirmEmail'\r\n                                    value={values.confirmEmail}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={!!errors.confirmEmail} />\r\n\r\n                            </FloatingLabel>\r\n\r\n                            <InputGroup>\r\n                                <FloatingLabel controlId=\"input-password\" label=\"Password\" className=\"col-12\">\r\n                                    <Form.Control\r\n                                        type={showPassword.passwordBtn ? \"text\" : \"password\"}\r\n                                        placeholder=\"Password\"\r\n                                        name='password'\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.password}\r\n                                    />\r\n                                </FloatingLabel>\r\n                                <PasswordVisible\r\n                                    id='toggle-password'\r\n                                    name='passwordBtn'\r\n                                    onToggle={togglePassword}\r\n                                    showPassword={showPassword.passwordBtn}\r\n                                />\r\n                            </InputGroup>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Form>\r\n                    )\r\n                }\r\n\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}