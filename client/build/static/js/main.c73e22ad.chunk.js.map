{"version":3,"sources":["pages/home.jsx","component/Navbar/SearchBar.jsx","component/Navbar/Sidebar.jsx","store.js","component/Navbar/AccountBtn.jsx","component/WebNav.jsx","component/Footer/FooterNav.jsx","component/Footer/MobileFooterNav.jsx","component/Footer.jsx","pages/actionSuccess.jsx","pages/actionFailure.jsx","component/PasswordVisible.jsx","pages/login.jsx","pages/register.jsx","pages/modifyPassword.jsx","pages/manageProduct.jsx","component/ProductForm.jsx","pages/editProduct.jsx","pages/createProduct.jsx","pages/productPage.jsx","pages/productList.jsx","pages/searchResult.jsx","pages/cart.jsx","pages/checkoutPage.jsx","pages/manageOrder.jsx","pages/orderDetail.jsx","App.jsx","index.js"],"names":["Home","react_default","a","createElement","Fragment","className","SearchBar","props","Form","onSubmit","FormControl","type","placeholder","aria-label","value","keyword","onChange","Button","variant","icons_search","color","size","Sidebar","Offcanvas","show","onHide","scroll","enforceFocus","Header","closeButton","Title","Body","ListGroup","map","cat","index","Item","key","action","href","concat","toLowerCase","Store","createContext","initialState","cart","cartItems","localStorage","getItem","JSON","parse","userInfo","reducer","state","setItem","stringify","Object","toConsumableArray","payload","objectSpread","filter","item","copy","slice","quantity","newQuantity","StoreProvider","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","Provider","children","AccountBtn","navigate","useNavigate","_useContext","useContext","ctxDispatch","Dropdown","align","Toggle","id","person","Menu","username","Divider","isAdmin","onClick","removeItem","WebNav","isTabletDevice","useMediaQuery","query","isMobileDevice","_useState","useState","_useState2","setShow","_useState3","_useState4","searchTerm","setSearchTerm","handleChange","event","target","handleSubmit","preventDefault","alert","Navbar","bg","expand","Container","fluid","list","Navbar_Sidebar","react_router_dom","to","shop","Navbar_SearchBar","cart3","Badge","pill","length","Navbar_AccountBtn","FooterNav","MobileFooterNav","Accordion","flush","eventKey","Footer","Footer_MobileFooterNav","Footer_FooterNav","rel","github","ActionSuccess","redirectNow","setRedirectNow","setTimeout","react_router","check_circle_fill","x_circle_fill","PasswordVisible","onToggle","name","showPassword","eye","eye_slash","schema","Yup","shape","email","required","password","initialize","Login","passwordBtn","setShowPassword","togglePassword","prevState","defineProperty","search","useLocation","redirectInUrl","URLSearchParams","get","redirect","useEffect","formik_esm","initialValues","validationSchema","_ref","asyncToGenerator","regenerator_default","mark","_callee","values","_yield$Axios$post","data","wrap","_context","prev","next","Axios","post","sent","t0","response","stop","_x","apply","this","arguments","_ref2","errors","touched","handleBlur","FloatingLabel","controlId","label","Control","onBlur","isInvalid","Feedback","tooltip","InputGroup","component_PasswordVisible","max","min","matches","confirmEmail","oneOf","confirmPassword","Register","confirmPwBtn","autoComplete","ModifyPassword","newPwBtn","confirmNewPwBtn","put","Group","Label","ManageProduct","productList","setProductList","_useState5","_useState6","setKeyword","fetchLink","result","fetchProducts","handleKeyword","handleSearchList","_callee2","_context2","handleDelete","_ref3","_callee3","newData","_context3","window","confirm","delete","headers","token","accessToken","_x2","Row","Col","md","as","xs","Select","sm","order","span","plus_lg","idx","_id","code","title","category","pencil_square","trash","sku","of","itemName","price","inStock","discount","ProductForm","coverImg","rows","description","maxLength","Text","render","remove","push","unit","img","step","formFor","EditProduct","pid","useParams","product","setProduct","console","log","fetchData","handleUpdate","hasOwnProperty","component_ProductForm","CreateProduct","productSubmit","initialCount","count","Error","ProductPage","src","alt","disabled","Spinner","animation","role","ProductList","products","setProducts","toUpperCase","prod","loading","SearchResult","setResult","_result","Cart","handleQuantityUpdate","total","reduce","prevVal","currValue","Alert","lg","handleRemoveItem","Card","phone","address","when","is","payment","then","cardNumber","cardHolder","expiryDate","cvv","notes","CheckoutPage","obj","params","operation","arrow_return_left","setFieldValue","resetForm","noValidate","inputMode","aria-describedby","replace","aria-labelledby","Check","defaultChecked","trim","pattern","statusColor","status","ManageOrder","orderList","setOrderList","startDate","setStartDate","Date","toISOString","split","endDate","setEndDate","_useState7","_useState8","user","setUser","_useState9","_useState10","setStatus","_useState11","_useState12","sort","setSort","info","createdAt","toLocaleString","hour12","eye_fill","OrderForm","_ref4","orderInfo","date","_ref5","readOnly","message","OrderDetail","orderId","setOrder","fetchOrder","orderData","init","location","reload","_x3","undefined","orderDetail_ProductList","orderDetail_OrderForm","App","component_WebNav","exact","path","element","home","login","register","modifyPassword","productPage","pages_productList","searchResult","manageProduct","editProduct","createProduct","pages_cart","checkoutPage","actionSuccess","actionFailure","manageOrder","orderDetail","component_Footer","ReactDOM","createRoot","document","getElementById","StrictMode","store_StoreProvider","src_App"],"mappings":"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","file":"static/js/main.c73e22ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <div className=\"m-auto\">\r\n        <h1>Welcome</h1>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Form, FormControl, Button } from 'react-bootstrap';\r\nimport { Search } from 'react-bootstrap-icons';\r\n\r\n\r\nconst SearchBar = (props) => {\r\n    return (\r\n        <Form className=\"d-flex ms-auto me-auto col-lg-4\" onSubmit={props.onSubmit}>\r\n            <FormControl\r\n                type=\"search\"\r\n                placeholder=\"Search Product\"\r\n                className=\"me-2 search-bar-input\"\r\n                aria-label=\"Search\"\r\n                value={props.keyword}\r\n                onChange={props.onChange}\r\n            />\r\n            <Button variant=\"outline-light border border-3 nav-btn\"\r\n                type=\"submit\"\r\n                >\r\n                <Search color=\"white\" size={24} />\r\n            </Button>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport { Offcanvas, ListGroup } from \"react-bootstrap\";\r\nimport '../../style/Sidebar.css';\r\n\r\nconst Sidebar = (props) => {\r\n    const categories = [\r\n        \"Rice\", \"Noodles\", \"Oil\", \"Sauce\", \"Spice\"\r\n    ]\r\n    return (\r\n        <Offcanvas show={props.show} onHide={props.onHide} scroll='true' enforceFocus='true'>\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Category</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <ListGroup variant=\"flush\">\r\n                    {categories.map((cat, index) => (\r\n                        <ListGroup.Item className='px-2' key={index} action href={`/product/category/${cat.toLowerCase()}`}>\r\n                            {cat}\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    )\r\n};\r\n\r\n\r\nexport default Sidebar;\r\n\r\n","import React, { createContext, useReducer } from 'react';\r\n\r\n\r\nexport const Store = createContext();\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n    },\r\n    userInfo: localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CART_ADD_ITEM':\r\n            localStorage.setItem('cartItems',\r\n                JSON.stringify([...state.cart.cartItems, action.payload]));\r\n            return {\r\n                ...state,\r\n                cart: {\r\n                    ...state.cart,\r\n                    cartItems: [...state.cart.cartItems, action.payload]\r\n                }\r\n            };\r\n\r\n        case 'CART_REMOVE_ITEM':\r\n            const cartItems = state.cart.cartItems.filter((item, index) =>\r\n                index !== action.payload\r\n            )\r\n            localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n            return { ...state, cart: { ...state.cart, cartItems } };\r\n\r\n        case 'CART_UPDATE_ITEM':\r\n            const copy = state.cart.cartItems.slice();\r\n            copy[action.payload.key].quantity = action.payload.newQuantity;\r\n            localStorage.setItem('cartItems', JSON.stringify(copy));\r\n            return { ...state, cart: { ...state.cart, cartItems: copy } };\r\n        case 'CART_CLEAR':\r\n            return { ...state, cart: { ...state.cart, cartItems: [] } };\r\n        case 'USER_SIGNIN':\r\n            return { ...state, userInfo: action.payload };\r\n        case 'USER_SIGNOUT':\r\n            return {\r\n                ...state,\r\n                userInfo: null,\r\n                cart: {\r\n                    cartItems: []\r\n                },\r\n            };\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const StoreProvider = (props) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const value = { state, dispatch };\r\n    return <Store.Provider value={value}>{props.children}</Store.Provider>\r\n}","import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Person } from 'react-bootstrap-icons';\r\nimport { Store } from \"../../store\";\r\n\r\nconst AccountBtn = () => {\r\n    const navigate = useNavigate();\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n    const handleLogout = () => {\r\n        ctxDispatch({ type: 'USER_SIGNOUT' });\r\n        localStorage.removeItem('userInfo');\r\n        localStorage.removeItem('cart');\r\n        navigate('/success');\r\n    }\r\n    return (\r\n        <Dropdown align='end'>\r\n            <Dropdown.Toggle variant=\"outline-light border border-3 nav-btn\" id=\"account-submenu\">\r\n                <Person color=\"white\" size={24} className='align-bottom' />\r\n                <span id='acc-text' className=\"px-1 fw-bold\">Account</span>\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                {userInfo !== null ?\r\n                    <Dropdown.Item className=\"text-primary\">Hi, {userInfo.username}</Dropdown.Item> :\r\n                    <Dropdown.Item href=\"/user/login\" className=\"dropdown-item text-primary\">Login</Dropdown.Item>}\r\n\r\n                <Dropdown.Divider />\r\n                {userInfo === null &&\r\n                    <Dropdown.Item href=\"/user/register\" className=\"dropdown-item text-danger\">Register</Dropdown.Item>\r\n                }\r\n                {userInfo !== null &&\r\n                    <Dropdown.Item href=\"/user/modify-password\" className=\"dropdown-item\">Modify Password</Dropdown.Item>\r\n                }\r\n                {userInfo !== null && !userInfo.isAdmin &&\r\n                    <Dropdown.Item href=\"/order\" className=\"dropdown-item\">My Order</Dropdown.Item>\r\n                }\r\n\r\n\r\n                {userInfo !== null && userInfo.isAdmin === true &&\r\n                    <>\r\n                        <Dropdown.Item href=\"/product/manage\" className=\"dropdown-item\">Manage Product</Dropdown.Item>\r\n                        <Dropdown.Item href=\"/order\" className=\"dropdown-item\">Manage Order</Dropdown.Item>\r\n                    </>\r\n                }\r\n\r\n                {userInfo !== null && <Dropdown.Divider />}\r\n\r\n                {userInfo !== null &&\r\n                    <Dropdown.Item onClick={() => handleLogout()} className=\"dropdown-item text-danger\">Logout</Dropdown.Item>\r\n                }\r\n            </Dropdown.Menu>\r\n        </Dropdown >\r\n    )\r\n}\r\n\r\nexport default AccountBtn;\r\n\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Navbar, Button, Badge, Container } from 'react-bootstrap';\r\nimport { List, Cart3, Shop } from 'react-bootstrap-icons';\r\n\r\nimport SearchBar from \"./Navbar/SearchBar\";\r\nimport Sidebar from \"./Navbar/Sidebar\";\r\nimport AccountBtn from \"./Navbar/AccountBtn\";\r\nimport { Store } from \"../store\";\r\n\r\nimport '../style/WebNav.css';\r\n\r\n\r\n\r\nconst WebNav = () => {\r\n    const { state } = useContext(Store);\r\n    const { cart } = state;\r\n\r\n    const isTabletDevice = useMediaQuery({\r\n        query: \"(max-width: 600px)\",\r\n    });\r\n\r\n    const isMobileDevice = useMediaQuery({\r\n        query: \"(max-width: 400px)\",\r\n    });\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleChange = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (searchTerm !== '') {\r\n            navigate(`/product/search/${searchTerm}`);\r\n            setSearchTerm('');\r\n        } else {\r\n            alert('Please enter keywords');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"danger\" variant=\"dark\" expand=\"lg\" className=\"px-2 sticky-top\" id='navbar'>\r\n            <Container fluid>\r\n                <Button variant=\"outline-light border border-3 nav-btn\" onClick={handleShow}>\r\n                    <List color=\"white\" size={24} className='align-bottom' />\r\n                    <strong id='menu-text' className=\"px-1\">Menu</strong>\r\n                </Button>\r\n\r\n                <Sidebar show={show} onHide={handleClose} />\r\n                {isMobileDevice ?\r\n                    <Link to='/'>\r\n                        <Button variant=\"outline-light border border-3 nav-btn me-auto\" className=\"mx-2\">\r\n                            <Shop color=\"white\" size={24} className='align-bottom' />\r\n                        </Button>\r\n                    </Link> :\r\n                    <Link to='/'\r\n                        className={isTabletDevice ?\r\n                            \"me-auto mx-3 fw-bold navbar-brand\" :\r\n                            \"mx-3 fw-bold navbar-brand\"}>\r\n                        E-Shop\r\n                    </Link>\r\n                }\r\n\r\n\r\n                {!isTabletDevice &&\r\n                    <SearchBar onSubmit={handleSubmit} keyword={searchTerm} onChange={handleChange} />}\r\n\r\n\r\n                <Link to=\"/cart\">\r\n                    <Button variant=\"outline-light border border-3 nav-btn\" className=\"mx-2 pe-0\">\r\n                        <Cart3 color=\"white\" size={24} className='align-bottom' />\r\n                        <Badge pill className=\"bg-warning counter\">\r\n                            <span className=\"text-black\">{cart.cartItems.length}</span>\r\n                        </Badge>\r\n                        <span id='cart-text' className=\"pe-3 fw-bold\">Cart</span>\r\n                    </Button>\r\n                </Link>\r\n\r\n                <AccountBtn />\r\n\r\n                {isTabletDevice &&\r\n                    <div className=\"w-100 mt-2\">\r\n                        <SearchBar onSubmit={handleSubmit} keyword={searchTerm} onChange={handleChange} />\r\n                    </div>}\r\n\r\n\r\n\r\n            </Container>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default WebNav;","import React from \"react\";\r\n\r\nconst FooterNav = () => {\r\n    return (\r\n        <>\r\n            <ul className=\"nav justify-content-center border-bottom mx-5\">\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/\"\r\n                        className=\"nav-link px-3 py-0 my-3 text-white border-end border-white\">ABOUT US</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/\"\r\n                        className=\"nav-link px-3 py-0 my-3 text-white border-end border-white\">POLICY</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/\"\r\n                        className=\"nav-link px-3 py-0 my-3 text-white border-end border-white\">FAQs</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/\"\r\n                        className=\"nav-link px-3 py-0 my-3 text-white border-end border-white\">CONTACT</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/\"\r\n                        className=\"nav-link px-3 py-0 my-3 text-white\">JOIN US</a>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FooterNav;","import React from \"react\";\r\nimport { Accordion, ListGroup } from \"react-bootstrap\";\r\nimport '../../style/MobileFooter.css'\r\n\r\nconst MobileFooterNav = () => {\r\n    return (\r\n        <Accordion flush>\r\n            <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header id='collapse-footer'>\r\n                    More about E-Shop\r\n                </Accordion.Header>\r\n                <Accordion.Body>\r\n                    <ListGroup variant=\"flush\" className=\"border-0\">\r\n                        <a href=\"/\"\r\n                            className=\"list-group-item list-group-item-action\">\r\n                            ABOUT US\r\n                        </a>\r\n                        <a href=\"/\"\r\n                            className=\"list-group-item list-group-item-action\">\r\n                            POLICY\r\n                        </a>\r\n                        <a href=\"/\"\r\n                            className=\"list-group-item list-group-item-action\">\r\n                            FAQs\r\n                        </a>\r\n                        <a href=\"/\"\r\n                            className=\"list-group-item list-group-item-action\">\r\n                            CONTACT\r\n                        </a>\r\n                        <a href=\"/\"\r\n                            className=\"list-group-item list-group-item-action\">\r\n                            JOIN US\r\n                        </a>\r\n                    </ListGroup>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default MobileFooterNav;","import React from 'react';\r\nimport { Github } from 'react-bootstrap-icons'\r\nimport '../style/Footer.css';\r\nimport FooterNav from './Footer/FooterNav';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport MobileFooterNav from './Footer/MobileFooterNav';\r\n\r\nconst Footer = () => {\r\n    const githubLink = 'https://github.com/davidwong1358';\r\n\r\n    const isMobileDevice = useMediaQuery({\r\n        query: \"(max-width: 600px)\",\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <footer className='bg-danger'>\r\n                {isMobileDevice ? <MobileFooterNav /> : <FooterNav />}\r\n                <div className='text-center text-white py-2'>\r\n                    &copy; 2022 Copyright: David Wong\r\n                    <a href={githubLink} target='_blank' rel=\"noopener noreferrer\">\r\n                        <Github size={24} color=\"white\" className='align-bottom mx-2' />\r\n                    </a>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { CheckCircleFill } from \"react-bootstrap-icons\";\r\n\r\n\r\nconst ActionSuccess = () => {\r\n  const [redirectNow, setRedirectNow] = useState(false);\r\n  setTimeout(() => setRedirectNow(true), 2000);\r\n  return redirectNow ? (\r\n    <Navigate to=\"/\" />\r\n  ) : (\r\n    <div className=\"m-auto row justify-content-center\">\r\n        <CheckCircleFill size={96} className='text-success mb-3 animate__animated animate__flipInX animate__fast'/>\r\n        <h1 className='text-center'>Success!</h1>\r\n        <Link to='/' className=\"px-3 text-center\">Redirect to home after 2 seconds. Click here if not response</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActionSuccess;","import React, { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { XCircleFill } from \"react-bootstrap-icons\";\r\n\r\n\r\nconst ActionSuccess = () => {\r\n  const [redirectNow, setRedirectNow] = useState(false);\r\n  setTimeout(() => setRedirectNow(true), 2000);\r\n  return redirectNow ? (\r\n    <Navigate to=\"/\" />\r\n  ) : (\r\n    <div className=\"m-auto row justify-content-center\">\r\n        <XCircleFill size={96} className='text-danger mb-3 animate__animated animate__flipInX animate__fast'/>\r\n        <h1 className='text-center'>Page doesn't exist</h1>\r\n        <Link to='/' className=\"px-3 text-center\">Redirect to home after 2 seconds. Click here if not response</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActionSuccess;","import React from \"react\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Eye, EyeSlash } from 'react-bootstrap-icons';\r\n\r\nconst PasswordVisible = (props) => {\r\n    return (\r\n        <Button\r\n            id={props.id}\r\n            className='border-0 bg-transparent toggle-password'\r\n            onClick={() => props.onToggle(props.name)} >\r\n            {!props.showPassword && <Eye color='black' size={24} />}\r\n            {props.showPassword && <EyeSlash color='black' size={24} />}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default PasswordVisible;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Formik } from 'formik';\r\nimport { Form, FloatingLabel, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { XCircleFill } from \"react-bootstrap-icons\";\r\nimport * as Yup from 'yup';\r\nimport PasswordVisible from \"../component/PasswordVisible\";\r\nimport { Store } from \"../store\";\r\nimport Axios from 'axios';\r\nimport '../style/Login.css';\r\n\r\n\r\nconst schema = Yup.object().shape({\r\n  email: Yup.string().email('Please enter proper email address').required('Please enter username or email.'),\r\n  password: Yup.string().required('Please enter password.')\r\n});\r\n\r\nconst initialize = {\r\n  email: '',\r\n  password: ''\r\n}\r\n\r\nconst Login = () => {\r\n  const [showPassword, setShowPassword] = useState({\r\n    passwordBtn: false\r\n  });\r\n\r\n  const togglePassword = (id) => {\r\n    setShowPassword(prevState => ({ ...prevState, [id]: !prevState[id] }))\r\n  };\r\n\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\r\n  const redirect = redirectInUrl ? redirectInUrl : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, redirect, userInfo]);\r\n\r\n\r\n  return (\r\n    <div id='login-form' className=\"form-signin\">\r\n      <Formik\r\n        initialValues={initialize}\r\n        validationSchema={schema}\r\n\r\n        onSubmit={async (values) => {\r\n          try {\r\n            const { data } = await Axios.post('/api/users/login', values);\r\n            ctxDispatch({ type: 'USER_SIGNIN', payload: data });\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n            navigate('/success');\r\n          } catch (err) {\r\n            alert(err.response.data);\r\n          }\r\n        }}\r\n      >\r\n        {\r\n          ({ values, errors, touched, handleSubmit, handleChange, handleBlur }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <h1 className='fs-2 fw-bold mb-4 text-center py-2'>Login</h1>\r\n\r\n              <FloatingLabel\r\n                controlId=\"inputEmail\"\r\n                label=\"Email Address\"\r\n              >\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.email && !!errors.email} />\r\n                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                  <XCircleFill className=\"me-2\" />{errors.email}\r\n                </Form.Control.Feedback>\r\n              </FloatingLabel>\r\n\r\n              <InputGroup>\r\n                <FloatingLabel controlId=\"inputPassword\" label=\"Password\" className='col-12 '>\r\n                  <Form.Control\r\n                    type={showPassword.passwordBtn ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    className='pe-5'\r\n                    name='password'\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                    <XCircleFill className=\"me-2\" />{errors.password}\r\n                  </Form.Control.Feedback>\r\n                </FloatingLabel>\r\n                <PasswordVisible\r\n                  id='toggle-password'\r\n                  name='passwordBtn'\r\n                  onToggle={togglePassword}\r\n                  showPassword={showPassword.passwordBtn}\r\n                />\r\n              </InputGroup>\r\n\r\n              <div className='d-flex justify-content-between mt-4'>\r\n                <Link to='/user/register' className=\"me-auto\">\r\n                  <Button variant=\"btn btn-link ps-0\">Register</Button>\r\n                </Link>\r\n                <Link to='/user/modify-password'>\r\n                  <Button variant=\"btn btn-link mx-2\">Forgot Password</Button>\r\n                </Link>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n\r\n            </Form>\r\n          )\r\n        }\r\n\r\n\r\n      </Formik>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Formik } from 'formik';\r\nimport { Form, FloatingLabel, InputGroup, Button } from \"react-bootstrap\";\r\nimport { XCircleFill } from \"react-bootstrap-icons\";\r\nimport * as Yup from 'yup';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport PasswordVisible from \"../component/PasswordVisible\";\r\nimport '../style/Register.css'\r\n\r\nconst schema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .max(20, 'Maximum 20 character')\r\n        .min(6, 'Minimun 6 characters.')\r\n        .matches(/^[\\w+-]{6,20}$/, 'Only letters, numbers hyphen (-) & underscore ( _ ) is allowed.')\r\n        .required('Please enter username'),\r\n    email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Email is required!'),\r\n    confirmEmail: Yup.string()\r\n        .oneOf([Yup.ref('email'), null], 'Email must be match')\r\n        .required('Please confirm email.'),\r\n    password: Yup.string()\r\n        .max(20, 'Maximum 20 character')\r\n        .min(6, 'Minimum 6 characters.')\r\n        .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Password must be match')\r\n        .required('Please confirm password.')\r\n});\r\n\r\nconst initialize = {\r\n    username: '',\r\n    email: '',\r\n    confirmEmail: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n}\r\n\r\n\r\nconst Register = () => {\r\n    const [showPassword, setShowPassword] = useState({\r\n        passwordBtn: false,\r\n        confirmPwBtn: false\r\n    });\r\n\r\n    const togglePassword = (id) => {\r\n        setShowPassword(prevState => ({ ...prevState, [id]: !prevState[id] }))\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div id='reg-form-container' className=\"p-5 container justify-content-center\">\r\n            <Formik\r\n                initialValues={initialize}\r\n                validationSchema={schema}\r\n                onSubmit={async (values) => {\r\n                    try {\r\n                        const { data } = await Axios.post('/api/users/register', values);\r\n                        navigate('/');\r\n                    } catch (err) {\r\n                        alert(JSON.stringify(err, null, 2));\r\n                    }\r\n                }}\r\n            >\r\n                {\r\n                    ({ values, errors, touched, handleSubmit, handleChange, handleBlur }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <h1 className='fs-2 fw-bold mb-4 text-center py-2'>Register</h1>\r\n\r\n                            <FloatingLabel\r\n                                controlId=\"input-user\"\r\n                                label=\"Username\"\r\n                                className=\"mb-2\"\r\n                            >\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Username\"\r\n                                    name='username'\r\n                                    value={values.username}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.username && !!errors.username} />\r\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                    <XCircleFill className=\"me-2\" />{errors.username}\r\n                                </Form.Control.Feedback>\r\n\r\n                            </FloatingLabel>\r\n\r\n                            <FloatingLabel\r\n                                controlId=\"input-email\"\r\n                                label=\"Email\"\r\n                                className=\"mb-2\"\r\n                            >\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    name='email'\r\n                                    value={values.email}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.email && !!errors.email} />\r\n\r\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                    <XCircleFill className=\"me-2\" />{errors.email}\r\n                                </Form.Control.Feedback>\r\n\r\n                            </FloatingLabel>\r\n\r\n                            <FloatingLabel\r\n                                controlId=\"input-confirm-email\"\r\n                                label=\"Confirm Email\"\r\n                                className=\"mb-2\"\r\n                            >\r\n                                <Form.Control\r\n                                    autoComplete='off'\r\n                                    type=\"email\"\r\n                                    placeholder=\"Confirm Email\"\r\n                                    name='confirmEmail'\r\n                                    value={values.confirmEmail}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.confirmEmail && !!errors.confirmEmail} />\r\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                    <XCircleFill className=\"me-2\" />{errors.confirmEmail}\r\n                                </Form.Control.Feedback>\r\n\r\n                            </FloatingLabel>\r\n\r\n                            <InputGroup className='mb-2'>\r\n                                <FloatingLabel controlId=\"input-password\" label=\"Password\" className=\"col-12\">\r\n                                    <Form.Control\r\n                                        type={showPassword.passwordBtn ? \"text\" : \"password\"}\r\n                                        placeholder=\"Password\"\r\n                                        name='password'\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.password && !!errors.password}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                        <XCircleFill className=\"me-2\" />{errors.password}\r\n                                    </Form.Control.Feedback>\r\n                                </FloatingLabel>\r\n                                <PasswordVisible\r\n                                    id='toggle-pw-btn-1'\r\n                                    name='passwordBtn'\r\n                                    onToggle={togglePassword}\r\n                                    showPassword={showPassword.passwordBtn}\r\n                                />\r\n\r\n                            </InputGroup>\r\n\r\n                            <InputGroup className='mb-2'>\r\n                                <FloatingLabel controlId=\"input-confirm-pw\" label=\"Confirm Password\" className=\"col-12\">\r\n                                    <Form.Control\r\n                                        type={showPassword.confirmPwBtn ? \"text\" : \"password\"}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name='confirmPassword'\r\n                                        value={values.confirmPassword}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.confirmPassword && !!errors.confirmPassword}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                        <XCircleFill className=\"me-2\" />{errors.confirmPassword}\r\n                                    </Form.Control.Feedback>\r\n\r\n                                </FloatingLabel>\r\n                                <PasswordVisible\r\n                                    id='toggle-pw-btn-2'\r\n                                    name='confirmPwBtn'\r\n                                    onToggle={togglePassword}\r\n                                    showPassword={showPassword.confirmPwBtn}\r\n                                />\r\n                            </InputGroup>\r\n\r\n                            <div className='d-flex justify-content-between mt-4'>\r\n                                <Link to='/user/login'>\r\n                                    <Button variant=\"btn btn-link ps-0\">Login</Button>\r\n                                </Link>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    )\r\n                }\r\n\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Register;","import React, { useState } from 'react';\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { XCircleFill } from \"react-bootstrap-icons\";\r\nimport PasswordVisible from \"../component/PasswordVisible\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport '../style/ModifyPassword.css'\r\n\r\nconst initialize = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n};\r\n\r\nconst schema = Yup.object().shape({\r\n    email: Yup.string().email('Please enter proper email.').required('Please enter your email.'),\r\n    password: Yup.string()\r\n        .max(20, 'Maximum 20 character')\r\n        .min(6, 'Minimum 6 characters.')\r\n        .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Password must be match').required('Please confirm password.'),\r\n});\r\n\r\nconst ModifyPassword = () => {\r\n\r\n    const [showPassword, setShowPassword] = useState({\r\n        newPwBtn: false,\r\n        confirmNewPwBtn: false\r\n    });\r\n\r\n    const togglePassword = (id) => {\r\n        setShowPassword(prevState => ({ ...prevState, [id]: !prevState[id] }))\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div id='password-form' className='p-5 container justify-content-center'>\r\n            <Formik\r\n                initialValues={initialize}\r\n                validationSchema={schema}\r\n                onSubmit={async (values) => {\r\n                    try {\r\n                        const { data } = await Axios.put(`/api/users/${values.email}`,\r\n                            { \"password\": values.password });\r\n                        navigate('/');\r\n                    } catch (err) {\r\n                        alert(JSON.stringify(err, null, 2));\r\n                    }\r\n                }}\r\n            >\r\n                {({ values, errors, touched, handleSubmit, handleChange, handleBlur }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <h1 className='fs-2 fw-bold mb-3 text-center py-2'>Modify Password</h1>\r\n                        <InputGroup className='mb-3'>\r\n                            <Form.Group controlId=\"user\" className='col-12'>\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    value={values.email}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.email && !!errors.email} />\r\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                    <XCircleFill className=\"me-2\" />{errors.email}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </InputGroup>\r\n\r\n                        <InputGroup className='mb-3'>\r\n                            <Form.Group controlId=\"new-password\" label=\"Password\" className=\"col-12\">\r\n                                <Form.Label>New Password</Form.Label>\r\n                                <Form.Control\r\n                                    type={showPassword.newPwBtn ? \"text\" : \"password\"}\r\n                                    placeholder=\"New Password\"\r\n                                    name='password'\r\n                                    value={values.password}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.password && !!errors.password}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                    <XCircleFill className=\"me-2\" />{errors.password}\r\n                                </Form.Control.Feedback>\r\n\r\n                            </Form.Group>\r\n                            <PasswordVisible\r\n                                id='toggle-new-pw-btn-1'\r\n                                name='newPwBtn'\r\n                                onToggle={togglePassword}\r\n                                showPassword={showPassword.newPwBtn}\r\n                            />\r\n                        </InputGroup>\r\n\r\n                        <InputGroup className='mb-3'>\r\n                            <Form.Group className=\"col-12\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type={showPassword.confirmNewPwBtn ? \"text\" : \"password\"}\r\n                                    placeholder=\"Confirm Password\"\r\n                                    name='confirmPassword'\r\n                                    value={values.confirmPassword}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.confirmPassword && !!errors.confirmPassword}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                    <XCircleFill className=\"me-2\" />{errors.confirmPassword}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <PasswordVisible\r\n                                id='toggle-new-pw-btn-2'\r\n                                name='confirmNewPwBtn'\r\n                                onToggle={togglePassword}\r\n                                showPassword={showPassword.confirmNewPwBtn}\r\n                            />\r\n                        </InputGroup>\r\n\r\n                        <Button type='submit' className='float-end mt-3 w-100'>Submit</Button>\r\n\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModifyPassword;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\r\nimport { PencilSquare, Trash, PlusLg } from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { Store } from \"../store\";\r\nimport '../style/ManageProduct.css'\r\n\r\nconst ManageProduct = () => {\r\n    const [productList, setProductList] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('code');\r\n    const [keyword, setKeyword] = useState('');\r\n    const { state, dispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n\r\n    const term = searchTerm === 'title' ? 'search' : searchTerm;\r\n    let fetchLink = `/api/products/?${term}=${keyword}`;\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const result = await Axios.get(fetchLink);\r\n                setProductList(result.data);\r\n            } catch (err) {\r\n            }\r\n        }\r\n        fetchProducts();\r\n    }, [])\r\n\r\n    const handleTerm = (event) => {\r\n        setSearchTerm(event.target.value);\r\n        if (event.target.value === 'category') {\r\n            setKeyword('Any');\r\n        } else {\r\n            setKeyword('');\r\n        }\r\n    }\r\n\r\n    const handleKeyword = (event) => {\r\n        setKeyword(event.target.value);\r\n    }\r\n\r\n    const handleSearchList = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const result = await Axios.get(fetchLink);\r\n            setProductList(result.data);\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm('Are you sure to delete?')) {\r\n            try {\r\n                const result = await Axios.delete(`/api/products/${id}`,\r\n                    {\r\n                        headers: { token: `Bearer ${userInfo.accessToken}` },\r\n                    }\r\n                );\r\n                const newData = await Axios.get(fetchLink);\r\n                setProductList(newData.data);\r\n            } catch (err) {\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Container id='manage-prod-container' className=\"mt-4\">\r\n            <h1 className=\"text-center mb-3\">Manage Product</h1>\r\n            <Row className=\"mx-1 mb-3\">\r\n                <Col md='9'>\r\n                    <Form className=\"d-flex flex-wrap\" onSubmit={handleSearchList}>\r\n                        <Form.Group as={Col} xs='2' id='search-term' className=\"me-2\">\r\n                            <Form.Select aria-label=\"Search Term\" value={searchTerm} onChange={handleTerm}>\r\n                                <option value=\"code\">Code</option>\r\n                                <option value=\"title\">Title</option>\r\n                                <option value=\"category\">Category</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        {searchTerm !== 'category' ?\r\n                            <Form.Group as={Col} className=\"me-2\">\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Search Keyword\"\r\n                                    value={keyword}\r\n                                    onChange={handleKeyword} />\r\n                            </Form.Group> :\r\n                            <Form.Group as={Col} className=\"me-2\">\r\n                                <Form.Select\r\n                                    aria-label=\"category\"\r\n                                    name='category'\r\n                                    value={keyword}\r\n                                    onChange={handleKeyword}>\r\n                                    <option value=\"Any\">Any</option>\r\n                                    <option value=\"Rice\">Rice</option>\r\n                                    <option value=\"Noodles\">Noodles</option>\r\n                                    <option value=\"Oil\">Oil</option>\r\n                                    <option value=\"Sauce\">Sauce</option>\r\n                                    <option value=\"Spice\">Spice</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        }\r\n\r\n                        <Col xs='12' sm='2'>\r\n                            <Button\r\n                                className=\"term-search-btn float-end float-md-start mt-2 mt-sm-0\"\r\n                                type='submit'>Search</Button>\r\n                        </Col>\r\n                    </Form>\r\n                </Col>\r\n                <Col xs={{ order: 'first' }} md={{ order: 'last', span: 3 }}>\r\n                    <Link to='/product/create' className=\"float-end mb-2 mb-md-2\">\r\n                        <Button variant='primary' >\r\n                            <PlusLg color=\"white\" size={16} className='align-middle' />\r\n                            <span className=\"px-1 fw-bold\">Create</span>\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n            {productList !== [] && productList.map((item, idx) => (\r\n                <Row className=\"border mb-3 mx-1 py-2\" key={item._id}>\r\n                    <div ><u>{`id: ${item._id || idx}`}</u></div>\r\n                    <Row>\r\n                        <Col xs={2} sm={1} className=\"my-1\">\r\n                            <strong>{item.code}</strong>\r\n                        </Col>\r\n                        <Col xs className=\"my-1 px-4\">\r\n                            <Link to={`/product/item/${item._id}`}><strong>{item.title}</strong></Link>\r\n\r\n                        </Col>\r\n\r\n                        <Col xs={3} sm={2} className=\"my-1\">\r\n                            <strong>{item.category}</strong>\r\n                        </Col>\r\n\r\n                        <Col sm={5} md={3} className=\"d-flex justify-content-around px-0\">\r\n                            <Link to={`/product/edit/${item._id}`}>\r\n                                <Button size='sm' variant=\"secondary\">\r\n                                    <PencilSquare color=\"white\" size={16} className='align-middle' />\r\n                                    <span className=\"px-1 fw-bold\">Edit</span>\r\n                                </Button>\r\n                            </Link>\r\n\r\n                            <div>\r\n                                <Button size='sm' variant='danger' onClick={() => handleDelete(item._id)}>\r\n                                    <Trash color=\"white\" size={16} className='align-middle' />\r\n                                    <span className=\"px-1 fw-bold\">Delete</span>\r\n                                </Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Row>\r\n\r\n            ))}\r\n        </Container>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ManageProduct;","import React from \"react\";\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport { Trash, PlusLg, XCircleFill } from \"react-bootstrap-icons\";\r\nimport { Formik, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst schema = Yup.object().shape({\r\n    code: Yup.string().required('Product code is missing.'),\r\n    title: Yup.string().required('Product title is missing.'),\r\n    sku: Yup.array().of(\r\n        Yup.object().shape({\r\n            itemName: Yup.string().required('Item name is missing.'),\r\n            price: Yup.number()\r\n                .min(0, 'Number must be 0 or positive.')\r\n                .required('Price is missing'),\r\n            inStock: Yup.number()\r\n                .min(0, 'Number must be 0 or positive.')\r\n                .required('Stock number is missing.'),\r\n            discount: Yup.number()\r\n                .min(0, 'Number must be 0 or positive.')\r\n                .max(100, 'Number must below or at 100.')\r\n                .required('Discount value is missing')\r\n        })\r\n    ).min(1, 'At least 1 item is required.')\r\n})\r\n\r\nconst ProductForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={props.initialize}\r\n            validationSchema={schema}\r\n            onSubmit={(values) => {\r\n                props.onSubmit(values);\r\n            }\r\n            }\r\n        >\r\n            {\r\n                ({ values, errors, touched, handleSubmit, handleChange, handleBlur }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row className=\"g-3 mb-3\">\r\n                            <Form.Group as={Col} md=\"2\" className=\"position-relative\">\r\n                                <Form.Label>Code</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Code\"\r\n                                    name=\"code\"\r\n                                    value={values.code}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.code && !!errors.code}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                    <XCircleFill className=\"me-2\" />{errors.code}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md='2'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Select\r\n                                    aria-label=\"Search Term\"\r\n                                    name='category'\r\n                                    value={values.category}\r\n                                    onChange={handleChange}>\r\n                                    <option value=\"Rice\">Rice</option>\r\n                                    <option value=\"Noodles\">Noodles</option>\r\n                                    <option value=\"Oil\">Oil</option>\r\n                                    <option value=\"Sauce\">Sauce</option>\r\n                                    <option value=\"Spice\">Spice</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"8\" className=\"position-relative\">\r\n                                <Form.Label>Product Title</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Product Title\"\r\n                                    name=\"title\"\r\n                                    value={values.title}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.title && !!errors.title}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                    <XCircleFill className=\"me-2\" />{errors.title}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n\r\n                        </Row>\r\n\r\n                        <Form.Group className='mb-3'>\r\n                            <Form.Label>Cover Image URL</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Cover Image URL\"\r\n                                name=\"coverImg\"\r\n                                value={values.coverImg}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Product Description</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={4}\r\n                                name=\"description\"\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                maxLength=\"500\" />\r\n                            <Form.Text className=\"text-secondary\">\r\n                                {`Remaining Characters: ${500 - values.description.length}`}\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <hr />\r\n                        <div className='my-3'>\r\n                            <FieldArray\r\n                                name=\"sku\"\r\n                                render={\r\n                                    ({ remove, push }) => (\r\n                                        <div>\r\n                                            <div className='d-flex justify-content-between'>\r\n                                                <h2>Items (Max 5 items)</h2>\r\n                                                <Button\r\n                                                    variant=\"primary\"\r\n                                                    onClick={() => values.sku.length < 5 ?\r\n                                                        push({\r\n                                                            itemName: '',\r\n                                                            price: 0,\r\n                                                            unit: '',\r\n                                                            inStock: 0,\r\n                                                            img: '',\r\n                                                            discount: 0,\r\n                                                        }) :\r\n                                                        null}\r\n                                                >\r\n                                                    <PlusLg color=\"white\" size={16} className='align-middle' />\r\n                                                    <span className=\"px-1 fw-bold\">Create</span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            {\r\n                                                values.sku.length > 0 &&\r\n                                                values.sku.map((item, index) => (\r\n                                                    <div className='mt-3 mb-4 p-3 border rounded' key={index}>\r\n                                                        <div className='d-flex justify-content-between'>\r\n                                                            <h6 className='fw-bold'>Item {index + 1}</h6>\r\n                                                            <Button size='sm' variant='danger'\r\n                                                                onClick={() =>\r\n                                                                    values.sku.length > 1 ?\r\n                                                                        remove(index) :\r\n                                                                        null}>\r\n                                                                <Trash color=\"white\" size={16} className='align-middle' />\r\n                                                                <span className=\"px-1 fw-bold\">Delete</span>\r\n                                                            </Button>\r\n                                                        </div>\r\n\r\n                                                        <Form.Group className=\"mb-3 position-relative\">\r\n                                                            <Form.Label>Item Title</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                name={`sku[${index}].itemName`}\r\n                                                                value={values.sku[index].itemName}\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                isInvalid={\r\n                                                                    errors.sku &&\r\n                                                                    errors.sku[index] &&\r\n                                                                    errors.sku[index].itemName &&\r\n                                                                    touched.sku &&\r\n                                                                    touched.sku[index].itemName\r\n                                                                }\r\n                                                            />\r\n                                                            {\r\n                                                                errors.sku &&\r\n                                                                errors.sku[index] &&\r\n                                                                errors.sku[index].itemName &&\r\n                                                                touched.sku &&\r\n                                                                touched.sku[index].itemName &&\r\n                                                                (<Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                                                    <XCircleFill className=\"me-2\" />{errors.sku[index].itemName}\r\n                                                                </Form.Control.Feedback>)\r\n                                                            }\r\n\r\n\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group className=\"mb-3\">\r\n                                                            <Form.Label>Image URL</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                name={`sku[${index}].img`}\r\n                                                                value={values.sku[index].img}\r\n                                                                onChange={handleChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n\r\n                                                        <Row>\r\n                                                            <Form.Group as={Col} xs='6' md=\"3\" className=\"mb-3 position-relative\" >\r\n                                                                <Form.Label>Price</Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    min='0'\r\n                                                                    step=\"0.1\"\r\n                                                                    name={`sku[${index}].price`}\r\n                                                                    value={values.sku[index].price}\r\n                                                                    onChange={handleChange}\r\n                                                                    onBlur={handleBlur}\r\n                                                                    isInvalid={\r\n                                                                        errors.sku &&\r\n                                                                        errors.sku[index] &&\r\n                                                                        errors.sku[index].price &&\r\n                                                                        touched.sku &&\r\n                                                                        touched.sku[index].price\r\n                                                                    }\r\n                                                                />\r\n                                                                {\r\n                                                                    errors.sku &&\r\n                                                                    errors.sku[index] &&\r\n                                                                    errors.sku[index].price &&\r\n                                                                    touched.sku &&\r\n                                                                    touched.sku[index].price &&\r\n                                                                    (<Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                                                        <XCircleFill className=\"me-2\" />{errors.sku[index].price}\r\n                                                                    </Form.Control.Feedback>)\r\n                                                                }\r\n                                                            </Form.Group>\r\n\r\n                                                            <Form.Group as={Col} xs='6' md=\"3\" className=\"mb-3\">\r\n                                                                <Form.Label>Unit</Form.Label>\r\n                                                                <Form.Select\r\n                                                                    aria-label=\"Unit\"\r\n                                                                    name={`sku[${index}].unit`}\r\n                                                                    value={values.sku[index].unit}\r\n                                                                    onChange={handleChange}>\r\n                                                                    <option value=\"Box(es)\">Box(es)</option>\r\n                                                                    <option value=\"Bag(s)\">Bag(s)</option>\r\n                                                                    <option value=\"Bucket(s)\">Bucket(s)</option>\r\n                                                                    <option value=\"Piece(s)\">Piece(s)</option>\r\n                                                                    <option value=\"Pack(s)\">Pack(s)</option>\r\n                                                                    <option value=\"Bottle(s)\">Bottle(s)</option>\r\n                                                                </Form.Select>\r\n                                                            </Form.Group>\r\n\r\n                                                            <Form.Group as={Col} xs='6' md=\"3\" className=\"mb-3 position-relative\" >\r\n                                                                <Form.Label>Discount% Off</Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    min='0'\r\n                                                                    max='100'\r\n                                                                    name={`sku[${index}].discount`}\r\n                                                                    value={values.sku[index].discount}\r\n                                                                    onChange={handleChange}\r\n                                                                    onBlur={handleBlur}\r\n                                                                    isInvalid={\r\n                                                                        errors.sku &&\r\n                                                                        errors.sku[index] &&\r\n                                                                        errors.sku[index].discount &&\r\n                                                                        touched.sku &&\r\n                                                                        touched.sku[index].discount\r\n                                                                    }\r\n                                                                />\r\n                                                                {\r\n                                                                    errors.sku &&\r\n                                                                    errors.sku[index] &&\r\n                                                                    errors.sku[index].discount &&\r\n                                                                    touched.sku &&\r\n                                                                    touched.sku[index].discount &&\r\n                                                                    (<Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                                                        <XCircleFill className=\"me-2\" />{errors.sku[index].discount}\r\n                                                                    </Form.Control.Feedback>)\r\n                                                                }\r\n                                                            </Form.Group>\r\n\r\n                                                            <Form.Group as={Col} xs='6' md=\"3\" className=\"mb-3 position-relative\" >\r\n                                                                <Form.Label>In Stock</Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    min='0'\r\n                                                                    name={`sku[${index}].inStock`}\r\n                                                                    value={values.sku[index].inStock}\r\n                                                                    onChange={handleChange}\r\n                                                                    onBlur={handleBlur}\r\n                                                                    isInvalid={\r\n                                                                        errors.sku &&\r\n                                                                        errors.sku[index] &&\r\n                                                                        errors.sku[index].inStock &&\r\n                                                                        touched.sku &&\r\n                                                                        touched.sku[index].inStock\r\n                                                                    }\r\n                                                                />\r\n                                                                {\r\n                                                                    errors.sku &&\r\n                                                                    errors.sku[index] &&\r\n                                                                    errors.sku[index].inStock &&\r\n                                                                    touched.sku &&\r\n                                                                    touched.sku[index].inStock &&\r\n                                                                    (<Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                                                        <XCircleFill className=\"me-2\" />{errors.sku[index].inStock}\r\n                                                                    </Form.Control.Feedback>)\r\n                                                                }\r\n                                                            </Form.Group>\r\n                                                        </Row>\r\n\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <Button type='submit' className='float-end w-100'>{props.formFor} Product</Button>\r\n\r\n                    </Form>\r\n                )\r\n            }\r\n\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default ProductForm;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ProductForm from '../component/ProductForm';\r\nimport { Store } from '../store';\r\nimport Axios from 'axios';\r\n\r\nconst EditProduct = () => {\r\n    const { pid } = useParams();\r\n    const { state, dispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n\r\n    const [product, setProduct] = useState({});\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await Axios.get(`/api/products/find/${pid}`);\r\n                if (result === null) {\r\n                    navigate('/error');\r\n                } else {\r\n                    setProduct(result.data);\r\n                    console.log(result);\r\n                }\r\n            } catch (err) {\r\n                navigate('/error');\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [pid]);\r\n\r\n    let initialize = {\r\n        code: product.code,\r\n        title: product.title,\r\n        description: product.description,\r\n        coverImg: product.coverImg,\r\n        category: product.category,\r\n        sku: product.sku\r\n    }\r\n\r\n    const handleUpdate = async (values) => {\r\n        try {\r\n            const { data } = await Axios.put(`/api/products/${pid}`, values,\r\n                {\r\n                    headers: { token: `Bearer ${userInfo.accessToken}` },\r\n                });\r\n            alert('Update Success');\r\n        } catch (err) {\r\n            alert(JSON.stringify(err, null, 2));\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container id='edit-prod-form' className='mb-5'>\r\n            <div className=\"py-4 text-center\">\r\n                <h1>Edit Product</h1>\r\n            </div>\r\n            {product.hasOwnProperty('code') &&\r\n                <Row className='g-5'>\r\n                    <ProductForm initialize={initialize} formFor='Edit' onSubmit={handleUpdate}/>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default EditProduct;","import React, { useContext } from 'react';\r\nimport { Store } from '../store';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport '../style/ManageProduct.css'\r\nimport ProductForm from '../component/ProductForm';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\n\r\n\r\nconst initialize = {\r\n    code: '',\r\n    title: '',\r\n    description: '',\r\n    coverImg: '',\r\n    category: 'Rice',\r\n    sku: [{\r\n        itemName: '',\r\n        price: 0,\r\n        unit: 'Box(es)',\r\n        inStock: 0,\r\n        img: '',\r\n        discount: 0,\r\n    }]\r\n\r\n}\r\n\r\nconst CreateProduct = () => {\r\n    const { state, dispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n    const navigate = useNavigate();\r\n    const productSubmit = async (values) => {\r\n        try {\r\n            const { data } = await Axios.post('/api/products', values,\r\n                {\r\n                    headers: { token: `Bearer ${userInfo.accessToken}` },\r\n                });\r\n            navigate('/product/manage');\r\n        } catch (err) {\r\n            alert(JSON.stringify(err, null, 2));\r\n            console.log(err);\r\n        }\r\n    }\r\n    return (\r\n        <Container id='create-prod-form' className='mb-5'>\r\n            <div className=\"py-4 text-center\">\r\n                <h1>Create Product</h1>\r\n            </div>\r\n            <Row className='g-5'>\r\n                <ProductForm initialize={initialize} onSubmit={productSubmit} formFor='Create' />\r\n            </Row>\r\n        </Container >\r\n    )\r\n\r\n}\r\n\r\nexport default CreateProduct;","import React, { useReducer, useState, useContext, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\nimport '../style/Product.css';\r\nimport { Store } from \"../store\";\r\n\r\n\r\nconst initialCount = { count: 1 };\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            return state.count < 99 ? { count: state.count + 1 } : { count: 99 };\r\n        case \"DECREMENT\":\r\n            return state.count > 1 ? { count: state.count - 1 } : { count: 1 };\r\n        case \"RESET\":\r\n            return { count: 1 };\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nconst ProductPage = () => {\r\n    const noImagePath = '/img/no_image.svg';\r\n\r\n    const { pid } = useParams();\r\n    const [product, setProduct] = useState({});\r\n    const [item, setItem] = useState({});\r\n    const [quantity, dispatch] = useReducer(reducer, initialCount);\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const switchProduct = (idx) => {\r\n        setItem(product.sku[idx]);\r\n        dispatch({ type: 'RESET' });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await Axios.get(`/api/products/find/${pid}`);\r\n                if (result === null) {\r\n                    navigate('/error');\r\n                } else {\r\n                    setProduct(result.data);\r\n                    setItem(result.data.sku[0]);\r\n                }\r\n            } catch (err) {\r\n                navigate('/error');\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [pid]);\r\n\r\n    const handleAddCart = () => {\r\n        ctxDispatch({\r\n            type: 'CART_ADD_ITEM',\r\n            payload: {\r\n                _id: product._id,\r\n                code: product.code,\r\n                title: product.title,\r\n                sku: item,\r\n                quantity: quantity.count\r\n            }\r\n        })\r\n    }\r\n    return product !== {} && !product.hasOwnProperty('sku') ?\r\n        (\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n        ) :\r\n        (\r\n            <Container id=\"product-container\" className=\"mt-3 px-3\">\r\n                <div className=\"row\">\r\n                <div id='product-img' className=\"col-md-4 p-3\">\r\n                    <img src={item.img !== '' ? item.img : noImagePath}\r\n                        alt={item.itemName} className=\"d-block mx-auto product-box-img\" />\r\n                </div>\r\n                <div id='product-info' className=\"col-md p-3\">\r\n                    <h2>{product.title}</h2>\r\n                    <h4 className=\"text-secondary\">{item.itemName}</h4>\r\n                    <div id=\"price-container\" className=\"px-2 mt-2 w-100 bg-warning\">\r\n                        {item.discount > 0 ?\r\n                            <h3><del className=\"me-2\">${item.price}</del>\r\n                                ${item.price * (100 - item.discount) / 100}</h3> :\r\n                            <h3>${item.price}</h3>\r\n                        }\r\n                    </div>\r\n                    <p className=\"px-2 bg-dark text-white\">In-stock: {item.inStock > 0? item.inStock: 'Out of Stock'}</p>\r\n                    {product.description !== '' && <p className=\"desc-text py-1\">{product.description}</p>}\r\n\r\n                    {product.hasOwnProperty('sku') && <div id=\"item-container\" className=\"my-4\">\r\n                        {product.sku.map((item, index) => (\r\n                            <button className=\"mx-3 item-btn p-0 btn btn-outline-danger\"\r\n                                key={item._id}\r\n                                onClick={() => switchProduct(index)}>\r\n                                <img src={item.img !== '' ? item.img : noImagePath}\r\n                                    alt={item.itemName} className=\"item-img\" />\r\n                            </button>\r\n                        ))}\r\n                    </div>}\r\n\r\n                    <div id=\"num-container\">\r\n                        <button className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={() => dispatch({ type: 'DECREMENT' })}>-</button>\r\n\r\n                        <div id=\"num-counter\" className=\"d-inline-block mx-2 text-center\">{quantity.count}</div>\r\n\r\n                        <button className=\"btn btn-outline-primary btn-sm\"\r\n                            onClick={() => dispatch({ type: 'INCREMENT' })}>+</button>\r\n\r\n                        <span className=\"mx-2\">{item.unit || 'Pieces'}</span>\r\n                    </div>\r\n                    <button className=\"btn btn-outline-primary my-2\"\r\n                        onClick={handleAddCart}\r\n                        disabled={item.inStock < quantity.count}>Add to Cart</button>\r\n\r\n                </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n}\r\n\r\nexport default ProductPage;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport '../style/ProductList.css';\r\n\r\nconst ProductList = () => {\r\n    const { category } = useParams();\r\n    const [products, setProducts] = useState([]);\r\n    const navigate = useNavigate(); \r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const result = await Axios.get(`/api/products/?category=${category[0].toUpperCase() + category.slice(1)}`);\r\n                setProducts(result.data);\r\n            } catch (err) {\r\n                navigate('/error');\r\n            }\r\n        }\r\n        fetchProducts();\r\n    }, [category])\r\n\r\n    return (\r\n        <div id=\"prod-container\" className=\"m-4 mx-auto\">\r\n            {products.map((prod, idx) => (\r\n                    <Link to={`/product/item/${prod._id}`} key={prod._id}>\r\n                        <div className=\"border product-box\" >\r\n                            <img src={prod.coverImg} alt={prod.title}\r\n                                className=\"product-img d-block mx-auto\"\r\n                                loading=\"lazy\" />\r\n                            <p className=\"fw-bold text-center p-1\">{prod.title}</p>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductList;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport '../style/ProductList.css';\r\n\r\nconst SearchResult = () => {\r\n    let { keyword } = useParams();\r\n    const [result, setResult] = useState([]);\r\n    const navigate = useNavigate(); \r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const result = await Axios.get(`/api/products/?title=${keyword}`);\r\n                setResult(result.data);\r\n            } catch (err) {\r\n                navigate('/error');\r\n            }\r\n        }\r\n        fetchProducts();\r\n    }, [keyword])\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"mx-auto my-3\">Search Result for: {keyword}</h1>\r\n            <div id=\"prod-container\" className=\"m-4 mx-auto\">\r\n                {result.map((item, idx) => (\r\n                        <Link to={`/product/item/${item._id}`} key={item._id}>\r\n                            <div className=\"border product-box\" >\r\n                                <img src={item.coverImg} alt={item.title}\r\n                                    className=\"product-img d-block mx-auto\"\r\n                                    loading=\"lazy\" />\r\n                                <p className=\"fw-bold text-center p-1\">{item.title}</p>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchResult;","import React, { useContext } from \"react\";\r\nimport { Container, Col, Row, Card, Button, Alert } from 'react-bootstrap';\r\nimport { Trash } from 'react-bootstrap-icons';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Store } from \"../store\";\r\nimport '../style/Cart.css'\r\n\r\nconst Cart = () => {\r\n    const noImagePath = '/img/no_image.svg';\r\n\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n    const {\r\n        userInfo, cart: { cartItems }\r\n    } = state;\r\n    const navigate = useNavigate();\r\n\r\n    const handleRemoveItem = (idx) => {\r\n        ctxDispatch({ type: 'CART_REMOVE_ITEM', payload: idx });\r\n    };\r\n\r\n    const handleQuantityUpdate = (idx, quantity) => {\r\n        if (quantity >= 1 && quantity <= 99) {\r\n            ctxDispatch({\r\n                type: 'CART_UPDATE_ITEM',\r\n                payload: { key: idx, newQuantity: quantity }\r\n            })\r\n        }\r\n    }\r\n    const handleCheckout = () => {\r\n        if (userInfo === null) {\r\n            alert(\"Please login first!\");\r\n        }\r\n        navigate('/user/login?redirect=/checkout');\r\n    }\r\n\r\n    const total = cartItems.reduce((prevVal, currValue) => (\r\n        prevVal +\r\n        currValue.quantity *\r\n        (currValue.sku.price * (100 - currValue.sku.discount) / 100)\r\n    ), 0)\r\n\r\n    return (\r\n        <Container id='cart-container' className=\"mt-3 mb-5 px-4\">\r\n            <div className=\"py-4 text-center\">\r\n                <h1>Cart</h1>\r\n            </div>\r\n            <Row className=\"g-5\">\r\n                <Col md={9} >\r\n                    {\r\n                        cartItems.length > 0 &&\r\n                        <Row className=\"mb-2\" id='prod-header'>\r\n                            <div className=\"col-md-5 fw-bold\">Product</div>\r\n                            <div className=\"col-md-2 fw-bold text-center\">Unit Price</div>\r\n                            <div className=\"col-md-2 fw-bold text-center\">Quantity</div>\r\n                            <div className=\"col-md-2 fw-bold text-center\">Sub-Total</div>\r\n                            <div className=\"col-md-1 fw-bold text-center\"></div>\r\n                        </Row>\r\n                    }\r\n\r\n                    {\r\n                        cartItems.length === 0 &&\r\n                        <Alert variant='info'>\r\n                            Your cart is empty. {' '}\r\n                            <Link to='/'>Go Shopping</Link>\r\n                        </Alert>\r\n                    }\r\n\r\n                    {\r\n                        cartItems.map((item, idx) => (\r\n                            <Row className=\"border py-3 mb-3\" key={idx}>\r\n                                <Col lg={5}>\r\n                                    <Row>\r\n                                        <Col sm={5} className=\"text-center\">\r\n                                            <img src={item.sku.img !== '' ? item.sku.img : noImagePath}\r\n                                                alt={item.sku.itemName}\r\n                                                className=\"cart-prod-img\" />\r\n                                        </Col>\r\n\r\n                                        <Col sm={7}>\r\n                                            <h5 className=\"fw-bold\">\r\n                                                {item.title}\r\n                                            </h5>\r\n                                            <h6 className=\"text-secondary\">\r\n                                                {item.sku.itemName}\r\n                                            </h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                <Col sm lg={2} className='text-center py-2'>\r\n                                    <Row>\r\n                                        <Col xs={6} className='desc-mobile'>\r\n                                            <strong>Unit Price</strong>\r\n                                        </Col>\r\n                                        <Col xs={6} sm={12}>\r\n                                            {item.sku.discount > 0 ?\r\n                                                <del>{`$${item.sku.price}`}</del> :\r\n                                                `$${item.sku.price}`} <br />\r\n                                            {item.sku.discount > 0 ?\r\n                                                `$${item.sku.price * (100 - item.sku.discount) / 100}` :\r\n                                                <div></div>\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                <Col sm lg={2} className='text-center py-2'>\r\n                                    <Row>\r\n                                        <Col xs={6} className='desc-mobile'>\r\n                                            <strong>Quantity</strong>\r\n                                        </Col>\r\n                                        <Col xs={6} sm={12}>\r\n                                            <Button variant=\"primary\" size=\"sm\"\r\n                                                onClick={() => handleQuantityUpdate(idx, item.quantity - 1)}>\r\n                                                -\r\n                                            </Button>\r\n                                            <div className=\"d-inline-block mx-2 text-center num-box\">{item.quantity}</div>\r\n                                            <Button variant=\"primary\" size=\"sm\"\r\n                                                onClick={() => handleQuantityUpdate(idx, item.quantity + 1)}>\r\n                                                +\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                <Col sm lg={2} className='text-center py-2'>\r\n                                    <Row>\r\n                                        <Col xs={6} className='desc-mobile'>\r\n                                            <strong>Amount</strong>\r\n                                        </Col>\r\n                                        <Col xs={6} sm={12}>\r\n                                            ${item.sku.price * (100 - item.sku.discount) / 100 * item.quantity}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                <Col lg={1} className='text-center py-2'>\r\n                                    <Button\r\n                                        variant=\"danger\"\r\n                                        size=\"sm\"\r\n                                        className=\"delete-btn\"\r\n                                        onClick={() => handleRemoveItem(idx)}\r\n                                    >\r\n                                        <Trash size={16} />\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        ))\r\n                    }\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <Row className=\"mb-3\">\r\n                        <Card className=\"p-2\">\r\n                            <h2>Items:</h2>\r\n                            <h3>{cartItems.length}</h3>\r\n                            <h2>Total Price:</h2>\r\n                            <h3>{total}</h3>\r\n                        </Card>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Card className=\"p-2\">\r\n                            <Button variant=\"primary\" type=\"submit\" className=\"w-100\"\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={handleCheckout}>Checkout</Button>\r\n                        </Card>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cart;","import React, { useContext } from \"react\";\r\nimport { Container, Row, Col, Badge, Card, Button, Form, InputGroup, ListGroup } from \"react-bootstrap\";\r\nimport { Formik } from 'formik';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { ArrowReturnLeft } from \"react-bootstrap-icons\";\r\nimport * as Yup from 'yup';\r\nimport { Store } from \"../store\";\r\nimport Axios from 'axios';\r\nimport '../style/Checkout.css';\r\n\r\nconst schema = Yup.object().shape({\r\n    name: Yup.string().required('Your name is missing.'),\r\n    phone: Yup.string().matches(/^\\d{8}$/, 'Invalid Phone Number').required('Phone number is missing.'),\r\n    address: Yup.string()\r\n        .when('payment', {\r\n            is: (payment) => payment !== 'Cash',\r\n            then: Yup.string().required('Shipping address is missing.')\r\n\r\n        }),\r\n    cardNumber: Yup.string()\r\n        .when('payment', {\r\n            is: (payment) => payment === 'Credit Card',\r\n            then: Yup.string().matches(/^\\d{4} \\d{4} \\d{4} \\d{4}$/, 'Invalid card number').required('Card number is missing.')\r\n\r\n        }),\r\n    cardHolder: Yup.string()\r\n        .when('payment', {\r\n            is: (payment) => payment === 'Credit Card',\r\n            then: Yup.string().required('Card holder\\'s name is missing.')\r\n\r\n        }),\r\n    expiryDate: Yup.date()\r\n        .when('payment', {\r\n            is: (payment) => payment === 'Credit Card',\r\n            then: Yup.date().required('Expiry date is missing.')\r\n\r\n        }),\r\n    cvv: Yup.string()\r\n        .when('payment', {\r\n            is: (payment) => payment === 'Credit Card',\r\n            then: Yup.string().length(3, 'Invalid CVV').required('CVV number is missing.')\r\n\r\n        }),\r\n    notes: Yup.string().max(150, \"Maximum 100 characters allowed.\")\r\n});\r\n\r\nconst initialize = {\r\n    name: '',\r\n    phone: '',\r\n    address: '',\r\n    payment: 'Cash',\r\n    cardNumber: '',\r\n    cardHolder: '',\r\n    expiryDate: '',\r\n    cvv: '',\r\n    notes: '',\r\n}\r\n\r\nconst CheckoutPage = () => {\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n    const { cart: { cartItems }, userInfo } = state;\r\n    const navigate = useNavigate();\r\n\r\n    const total = cartItems.reduce((prevVal, currValue) => (\r\n        prevVal +\r\n        currValue.quantity *\r\n        (currValue.sku.price * (100 - currValue.sku.discount) / 100)\r\n    ), 0);\r\n\r\n    const handleSubmit = async (values) => {\r\n        const obj = {\r\n            ...values,\r\n            \"products\": cartItems,\r\n            \"userInfo\": {\r\n                username: userInfo.username,\r\n                email: userInfo.email,\r\n                _id: userInfo._id\r\n            },\r\n            \"total\": total\r\n        };\r\n        try {\r\n            const { data } = await Axios.post('/api/orders', obj,\r\n                {\r\n                    headers: { token: `Bearer ${userInfo.accessToken}` },\r\n                });\r\n            ctxDispatch({ type: 'CART_CLEAR' });\r\n            localStorage.removeItem('cartItems');\r\n\r\n            const result = await Axios.put('/api/products', cartItems, {\r\n                params: {\r\n                    operation: 'reduce',\r\n                    id: userInfo._id\r\n                },\r\n                headers: { token: `Bearer ${userInfo.accessToken}` }\r\n            })\r\n            navigate('/success');\r\n        } catch (err) {\r\n            alert(JSON.stringify(err, null, 2));\r\n            console.log(JSON.stringify(err, null, 2));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container id='checkout-container' className=\"mt-3 mb-5\">\r\n                <div className=\"py-4 text-center\">\r\n                    <h1>Checkout</h1>\r\n                </div>\r\n\r\n                <Row className=\"g-5\">\r\n                    <Col md={{ span: 4, order: \"last\" }}>\r\n                        <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <span className=\"text-danger\">Your cart</span>\r\n                            <Badge pill bg=\"danger\">{cartItems.length}</Badge>\r\n                        </h4>\r\n\r\n                        <ListGroup className=\"mb-3\">\r\n                            {\r\n                                cartItems.map((item, key) => (\r\n                                    <ListGroup.Item className=\"d-flex justify-content-between lh-sm\" key={key}>\r\n                                        <div>\r\n                                            <h6 className=\"my-0\">{item.title}</h6>\r\n                                            <small className=\"text-muted\">{`${item.sku.itemName} (${item.quantity})`}</small>\r\n                                        </div>\r\n                                        <span className=\"text-muted\">{`$${item.sku.price * (100 - item.sku.discount) / 100 * item.quantity}`}</span>\r\n                                    </ListGroup.Item>\r\n                                ))\r\n                            }\r\n                            <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                <span>Total (HKD)</span>\r\n                                <strong>${total}</strong>\r\n\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <Link to='/cart' className=\"float-end\"><ArrowReturnLeft className=\"me-2\" />Back to cart</Link>\r\n                    </Col>\r\n\r\n                    <Col md={8}>\r\n                        <Formik\r\n                            initialValues={initialize}\r\n                            validationSchema={schema}\r\n                            onSubmit={(values) => handleSubmit(values)}\r\n                        >\r\n                            {\r\n                                ({ values, errors, touched, handleSubmit, handleChange, handleBlur, resetForm, setFieldValue }) => (\r\n                                    <>\r\n                                        <h4 className=\"mb-3\">Billing address</h4>\r\n                                        <Form id='checkout-form' noValidate onSubmit={handleSubmit}>\r\n                                            <Row className=\"g-3\">\r\n                                                <Form.Group as={Col} md=\"7\" controlId=\"name\">\r\n                                                    <Form.Label>Name</Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"name\"\r\n                                                        value={values.name}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        isInvalid={touched.name && !!errors.name}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.name}\r\n                                                    </Form.Control.Feedback>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group as={Col} md=\"5\" controlId=\"phone\">\r\n                                                    <Form.Label>Phone Number</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <InputGroup.Text id=\"telCode\">+852</InputGroup.Text>\r\n                                                        <Form.Control\r\n                                                            type=\"tel\"\r\n                                                            name=\"phone\"\r\n                                                            inputMode=\"tel\"\r\n                                                            maxLength=\"8\"\r\n                                                            aria-describedby=\"telCode\"\r\n                                                            value={values.phone.replace(/[^0-9]/g, '')}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                            isInvalid={touched.phone && !!errors.phone}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.phone}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group as={Col} md=\"12\" controlId=\"address\">\r\n                                                    <Form.Label>Address</Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"address\"\r\n                                                        value={values.address}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        isInvalid={touched.address && !!errors.address}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.address}\r\n                                                    </Form.Control.Feedback>\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n\r\n                                            <hr className=\"my-4\" />\r\n                                            <h4 className=\"mb-3\">Payment</h4>\r\n\r\n                                            <div role=\"group\" aria-labelledby=\"payment-group\" className=\"my-3\">\r\n                                                <Form.Check\r\n                                                    type=\"radio\"\r\n                                                    name=\"payment\"\r\n                                                    id=\"cash\"\r\n                                                    label=\"Cash\"\r\n                                                    value='Cash'\r\n                                                    defaultChecked\r\n                                                    onChange={handleChange}\r\n                                                    onClick={() => {\r\n                                                        setFieldValue('cardNumber', '');\r\n                                                        setFieldValue('cardHolder', '');\r\n                                                        setFieldValue('expiryDate', '');\r\n                                                        setFieldValue('cvv', '');\r\n                                                    }}\r\n                                                />\r\n                                                <Form.Check\r\n                                                    type=\"radio\"\r\n                                                    name=\"payment\"\r\n                                                    id=\"credit-card\"\r\n                                                    label=\"Credit Card\"\r\n                                                    value='Credit Card'\r\n                                                    onChange={handleChange}\r\n\r\n                                                />\r\n                                                <Form.Check\r\n                                                    type=\"radio\"\r\n                                                    name=\"payment\"\r\n                                                    id=\"bank-transfer\"\r\n                                                    label=\"Bank Transfer\"\r\n                                                    value=\"Bank Transfer\"\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className={values.payment !== 'Credit Card' ? \"mb-3\" : \"mb-3 d-none\"}>\r\n                                                <strong>Cash: </strong>Pickup at store only\r\n                                                <br />\r\n                                                <strong>Pickup Location: </strong> Unit 1, 1/F, ABC Building, Hong Kong, N.T.\r\n                                                <br /><br />\r\n                                                <strong>Bank Transfer: </strong> Please transfer to the account\r\n                                                <br />\r\n                                                <strong>Bank Acc.: </strong> 000-000-0-000000-0 (E-shop Company)\r\n                                                <br /> <br />\r\n                                                Once the transfer completed, please send the capture of transaction record to\r\n                                                <br />\r\n                                                <strong>Whatsapp: </strong>+852 0000 0000\r\n                                                <br />\r\n                                                Delivery will be arranged after the payment is confirmed.\r\n                                            </div>\r\n\r\n                                            <div className={values.payment === 'Credit Card' ? \"mb-3\" : \"mb-3 d-none\"}>\r\n                                                <Row className=\"g-3\">\r\n                                                    <Form.Group controlId=\"card-no\">\r\n                                                        <Form.Label>Credit Card Number</Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"tel\"\r\n                                                            name=\"cardNumber\"\r\n                                                            inputMode=\"numeric\"\r\n                                                            placeholder=\"0000 0000 0000 0000\"\r\n                                                            maxLength=\"19\"\r\n                                                            value={values.cardNumber\r\n                                                                .replace(/[^0-9]/g, '')\r\n                                                                .replace(/\\s/g, \"\")\r\n                                                                .replace(/(\\d{4})/g, \"$1 \")\r\n                                                                .trim()}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                            isInvalid={touched.cardNumber && !!errors.cardNumber}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.cardNumber}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId=\"card-name\">\r\n                                                        <Form.Label>Card Holder Name</Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            name=\"cardHolder\"\r\n                                                            value={values.cardHolder}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                            isInvalid={touched.cardHolder && !!errors.cardHolder}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.cardHolder}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group as={Col} md=\"6\" controlId=\"expiry-date\">\r\n                                                        <Form.Label>Expiry Date (YYYY-MM)</Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"month\"\r\n                                                            name=\"expiryDate\"\r\n                                                            placeholder=\"YYYY/MM\"\r\n                                                            max=\"2099-12\"\r\n                                                            pattern=\"[0-9]{4}-[0-9]{2}\"\r\n                                                            value={values.expiryDate}\r\n                                                            maxLength=\"5\"\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                            isInvalid={touched.expiryDate && !!errors.expiryDate}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.expiryDate}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group as={Col} md=\"6\" controlId=\"cvv\">\r\n                                                        <Form.Label>CVV</Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"tel\"\r\n                                                            inputMode=\"numeric\"\r\n                                                            name=\"cvv\"\r\n                                                            placeholder=\"CVV\"\r\n                                                            pattern=\"\\d{3}\"\r\n                                                            maxLength=\"3\"\r\n                                                            value={values.cvv\r\n                                                                .replace(/[^0-9]/g, '')\r\n                                                                .replace(/\\s/g, \"\")}\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                            isInvalid={touched.cvv && !!errors.cvv}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.cvv}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                </Row>\r\n\r\n                                            </div>\r\n\r\n                                            <Form.Group className=\"mb-3\" controlId=\"checkout-notes\">\r\n                                                <Form.Label>Notes</Form.Label>\r\n                                                <Form.Control\r\n                                                    as=\"textarea\"\r\n                                                    rows={3}\r\n                                                    name=\"notes\"\r\n                                                    value={values.notes}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={!!errors.notes}\r\n                                                    maxLength=\"150\" />\r\n                                                <Form.Text className=\"text-secondary\">\r\n                                                    {`Remaining Characters: ${150 - values.notes.length}`}\r\n                                                </Form.Text>\r\n                                            </Form.Group>\r\n\r\n                                            <Card className=\"p-2\">\r\n                                                <Button variant=\"primary\" type=\"submit\">Submit Order</Button>\r\n                                            </Card>\r\n                                        </Form>\r\n                                    </>\r\n                                )\r\n                            }\r\n\r\n                        </Formik>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckoutPage;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Col, Row, Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { EyeFill } from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Store } from \"../store\";\r\nimport Axios from 'axios';\r\nimport '../style/Order.css'\r\n\r\nconst statusColor = (status) => {\r\n    switch (status) {\r\n        case 'Pending': return 'text-warning';\r\n        case 'Delivering': return 'text-info';\r\n        case 'Completed': return 'text-success';\r\n        case 'Cancelled': return 'text-danger';\r\n        default: return 'text-black';\r\n    }\r\n}\r\n\r\nconst ManageOrder = () => {\r\n    const { state, dispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n\r\n    const [orderList, setOrderList] = useState({});\r\n    const [startDate, setStartDate] = useState('1990-01-01');\r\n    const [endDate, setEndDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\n    const [user, setUser] = useState('');\r\n    const [status, setStatus] = useState('Any');\r\n\r\n    const [sort, setSort] = useState('asc-time');\r\n\r\n    const fetchLink = userInfo.isAdmin ?\r\n                '/api/orders' :\r\n                `/api/orders/user/${userInfo._id}`;\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const result = await Axios.get(fetchLink, {\r\n                    params: {\r\n                        user: userInfo.isAdmin ? user : userInfo.username,\r\n                        startDate: startDate,\r\n                        endDate: endDate,\r\n                        sort: sort,\r\n                        status: status,\r\n                        id: userInfo._id\r\n                    },\r\n                    headers: { token: `Bearer ${userInfo.accessToken}` },\r\n                });\r\n                setOrderList(result.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchProducts();\r\n    }, [])\r\n\r\n    const handleUser = (event) => {\r\n        setUser(event.target.value);\r\n\r\n    }\r\n\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n\r\n    const handleStartDate = (event) => {\r\n        setStartDate(event.target.value);\r\n    }\r\n\r\n    const handleEndDate = (event) => {\r\n        setEndDate(event.target.value);\r\n    }\r\n\r\n    const handleSort = (event) => {\r\n        setSort(event.target.value);\r\n    }\r\n\r\n    const handleSearchList = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const result = await Axios.get(fetchLink, {\r\n                params: {\r\n                    user: userInfo.isAdmin ? user : userInfo.username,\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    sort: sort,\r\n                    status: status,\r\n                    id: userInfo._id\r\n                },\r\n                headers: { token: `Bearer ${userInfo.accessToken}` },\r\n            });\r\n            setOrderList(result.data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container id='manage-order-container' className=\"mt-4\">\r\n            <h1 className=\"text-center mb-3\">Manage Order</h1>\r\n            {userInfo.isAdmin &&\r\n                <Row className=\"mx-1 mb-3\">\r\n                    <Form.Group as={Col} className=\"px-1\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>User</InputGroup.Text>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Search User\"\r\n                                value={user}\r\n                                onChange={handleUser} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Row>\r\n            }\r\n\r\n            <Row className=\"mx-1 mb-3\">\r\n                <Form.Group as={Col} xs='12' sm md className=\"px-1\">\r\n                    <InputGroup>\r\n                        <InputGroup.Text>Start</InputGroup.Text>\r\n                        <Form.Control\r\n                            type=\"date\"\r\n                            placeholder=\"Start\"\r\n                            value={startDate}\r\n                            onChange={handleStartDate} />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group as={Col} xs='12' sm md className=\"px-1 mt-3 mt-sm-0\">\r\n                    <InputGroup>\r\n                        <InputGroup.Text>End</InputGroup.Text>\r\n                        <Form.Control\r\n                            type=\"date\"\r\n                            placeholder=\"End\"\r\n                            value={endDate}\r\n                            onChange={handleEndDate} />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} sm='12' md className=\"px-1 mt-3 mt-md-0\">\r\n                    <InputGroup>\r\n                        <InputGroup.Text>Status</InputGroup.Text>\r\n                        <Form.Select aria-label=\"Search Term\" value={status} onChange={handleStatus}>\r\n                            <option value=\"Any\">Any</option>\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Delivering\">Delivering</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                            <option value=\"Cancelled\">Cancelled</option>\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Row>\r\n\r\n            <Row className=\"mx-1 mb-3\">\r\n                <Form.Group as={Col} sm='9' className=\"px-1\">\r\n                    <InputGroup>\r\n                        <InputGroup.Text>Sorting</InputGroup.Text>\r\n                        <Form.Select aria-label=\"Search Term\" value={sort} onChange={handleSort}>\r\n                            <option value=\"asc-time\">Earliest Order First</option>\r\n                            <option value=\"desc-time\">Latest Order First</option>\r\n                            <option value=\"desc-price\">Greatest Order Total First</option>\r\n                            <option value=\"asc-price\">Smallest Order Total First</option>\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Col sm >\r\n                <Button className=\"w-100 mt-3 mt-sm-0\" onClick={handleSearchList}>Search</Button>\r\n                </Col>\r\n                \r\n            </Row>\r\n\r\n            {orderList.length > 0 &&\r\n                orderList.map((info, index) => (\r\n                    <Row className=\"border mb-3 mx-1 py-2\" key={index}>\r\n                        <div className=\"d-flex justify-content-between mb-2 flex-wrap\">\r\n                            <u>{`id: ${info._id}`}</u>\r\n                            <div>{new Date(info.createdAt).toLocaleString('en-GB', { hour12: false })}</div>\r\n                        </div>\r\n                        <Row>\r\n                            <Col>{info.userInfo.username}</Col>\r\n                            <Col className=\"text-center\">${info.total}</Col>\r\n                            <Col className=\"text-end text-sm-center \">\r\n                                <div className={statusColor(info.status)}>{info.status}</div>\r\n                            </Col>\r\n                            <Col xs={12} sm>\r\n                                <Link to={`/order/${info._id}`} >\r\n                                    <Button size='sm' variant='secondary' className=\"float-end view-order-btn\">\r\n                                        <EyeFill color=\"white\" size={16} className='align-middle' />\r\n                                        <span className=\"px-1 fw-bold\">View</span>\r\n                                    </Button>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Row>\r\n                ))\r\n            }\r\n\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default ManageOrder;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Container, Col, Row, Button, Form, InputGroup, Badge, ListGroup } from 'react-bootstrap';\r\nimport { ArrowReturnLeft } from \"react-bootstrap-icons\";\r\nimport { Formik } from 'formik';\r\nimport { Store } from '../store';\r\nimport Axios from 'axios';\r\nimport '../style/Order.css';\r\n\r\nconst OrderDetail = () => {\r\n    const { orderId } = useParams();\r\n    const [order, setOrder] = useState({});\r\n    const { state, dispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n\r\n    useEffect(() => {\r\n        const fetchOrder = async () => {\r\n            try {\r\n                const result = await Axios.get(`/api/orders/find/${orderId}`, {\r\n                    params: { \"id\": userInfo._id },\r\n                    headers: { token: `Bearer ${userInfo.accessToken}` },\r\n\r\n                });\r\n                setOrder(result.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchOrder();\r\n    }, [orderId])\r\n\r\n    const orderData = {\r\n        id: order._id,\r\n        userInfo: order.userInfo,\r\n        name: order.name,\r\n        phone: order.phone,\r\n        address: order.address,\r\n        payment: order.payment,\r\n        cardNumber: order.cardNumber,\r\n        cardHolder: order.cardHolder,\r\n        expiryDate: order.expiryDate,\r\n        cvv: order.cvv,\r\n        notes: order.notes,\r\n        total: order.total,\r\n        status: order.status,\r\n        message: order.message || ''\r\n    }\r\n\r\n    const handleUpdate = async (values, init, products) => {\r\n        try {\r\n            const result = await Axios.put(`/api/orders/${orderId}`, values,\r\n                {\r\n                    headers: { token: `Bearer ${userInfo.accessToken}` },\r\n                }\r\n            );\r\n            \r\n            if (orderData.status !== 'Cancelled' && values.status === 'Cancelled') {\r\n                const addProduct = await Axios.put('/api/products', order.products, {\r\n                    params: {\r\n                        operation: 'add',\r\n                        id: userInfo._id\r\n                    },\r\n                    headers: { token: `Bearer ${userInfo.accessToken}` }\r\n                })\r\n            } else if (orderData.status === 'Cancelled' && values.status !== 'Cancelled') {\r\n                const reduceProduct = await Axios.put('/api/products', order.products, {\r\n                    params: {\r\n                        operation: 'reduce',\r\n                        id: userInfo._id\r\n                    },\r\n                    headers: { token: `Bearer ${userInfo.accessToken}` }\r\n                })\r\n            }\r\n            alert('Update Success');\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return order._id !== undefined && (\r\n        <Container id='order-detail-container' className=\"my-4 px-4\">\r\n            <div className='row justify-content-center'>\r\n                <h1 className=\"text-center\">Order Details</h1>\r\n                <Link to='/order' className=\"text-center mb-3\"><ArrowReturnLeft className=\"me-2\" />Back to Order Page</Link>\r\n            </div>\r\n\r\n            {order.products !== undefined && <ProductList products={order.products} total={order.total} />}\r\n\r\n            <hr className='my-4' />\r\n\r\n            <OrderForm orderInfo={orderData} date={order.createdAt} isAdmin={userInfo.isAdmin} onSubmit={handleUpdate} product={order.products} />\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst ProductList = ({ products, total }) => {\r\n    return (\r\n        <Row>\r\n            <h4 className=\"mb-2\">\r\n                <span className=\"text-danger  me-3\">Your cart</span>\r\n                <Badge pill bg=\"danger \">{products.length}</Badge>\r\n            </h4>\r\n            <div className=' d-none d-md-block pe-4'>\r\n                <Row className=\"mb-2\">\r\n                    <div className=\"col-md fw-bold\">Product</div>\r\n                    <div className=\"col-md-2 fw-bold text-center\">Unit Price</div>\r\n                    <div className=\"col-md-2 fw-bold text-center\">Quantity</div>\r\n                    <div className=\"col-md-2 fw-bold text-center\">Sub-Total</div>\r\n                </Row>\r\n\r\n            </div>\r\n\r\n            <ListGroup className=\"mb-3\">\r\n                {\r\n                    products.map((item, key) => (\r\n                        <ListGroup.Item className=\"lh-sm\" key={key}>\r\n                            <Row>\r\n                                <Col sm={12} md>\r\n                                    <Row >\r\n                                        <Col xs={3} className=\"text-start\">\r\n                                            <strong>{item.code}</strong>\r\n                                        </Col>\r\n\r\n                                        <Col xs className=\"text-start\">\r\n                                            <strong>\r\n                                                {item.title}\r\n                                            </strong>\r\n                                            <div className=\"text-secondary\">\r\n                                                {item.sku.itemName}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                <Col sm md={2} className='text-center py-2'>\r\n                                    <Row>\r\n                                        <Col xs={6} className='d-block d-sm-none'>\r\n                                            <strong>Unit Price</strong>\r\n                                        </Col>\r\n                                        <Col xs={6} sm={12}>\r\n                                            {item.sku.discount > 0 ?\r\n                                                <del className='text-secondary'>{`$${item.sku.price}`}</del> :\r\n                                                `$${item.sku.price}`} <br />\r\n                                            {item.sku.discount > 0 ?\r\n                                                `$${item.sku.price * (100 - item.sku.discount) / 100}` :\r\n                                                <div></div>\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                <Col sm md={2} className='text-center py-2'>\r\n                                    <Row>\r\n                                        <Col xs={6} className='d-block d-sm-none'>\r\n                                            <strong>Quantity</strong>\r\n                                        </Col>\r\n                                        <Col xs={6} sm={12}>\r\n                                            <div className=\"d-inline-block mx-2 text-center num-box\">{item.quantity}</div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                                <Col sm md={2} className='text-center py-2'>\r\n                                    <Row>\r\n                                        <Col xs={6} className='d-block d-sm-none'>\r\n                                            <strong>Amount</strong>\r\n                                        </Col>\r\n                                        <Col xs={6} sm={12}>\r\n                                            ${item.sku.price * (100 - item.sku.discount) / 100 * item.quantity}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))\r\n                }\r\n\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col xs>\r\n                            <span>Total (HKD)</span>\r\n                        </Col>\r\n\r\n                        <Col xs={6} sm={4} md={2} className=\"text-center\">\r\n                            <strong>${total}</strong>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst OrderForm = ({ orderInfo, date, isAdmin, onSubmit }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={orderInfo}\r\n            onSubmit={(values) => {\r\n                onSubmit(values);\r\n            }}\r\n        >\r\n            {\r\n                ({ values, handleSubmit, handleChange }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row className=\"mb-3\">\r\n                            <Form.Group as={Col} md className='mb-3 mb-md-0'>\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"userInfo.user\"\r\n                                    value={values.userInfo.username} readOnly\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md >\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"userInfo.email\"\r\n                                    value={values.userInfo.email} readOnly\r\n                                />\r\n                            </Form.Group>\r\n                        </Row>\r\n\r\n                        <Row className=\"mb-3\">\r\n                            <Form.Group as={Col} md=\"7\" className='mb-3 mb-md-0'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"name\"\r\n                                    value={values.name} readOnly\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"5\">\r\n                                <Form.Label>Phone Number</Form.Label>\r\n                                <InputGroup>\r\n                                    <InputGroup.Text id=\"telCode\">+852</InputGroup.Text>\r\n                                    <Form.Control\r\n                                        name=\"phone\"\r\n                                        maxLength=\"8\"\r\n                                        value={values.phone} readOnly\r\n                                    />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Row>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                value={values.address} readOnly\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <hr className='my-4' />\r\n\r\n                        <Form.Group controlId=\"payment\" className='mb-3'>\r\n                            <InputGroup>\r\n                                <InputGroup.Text id=\"payment\">Payment</InputGroup.Text>\r\n                                <Form.Control\r\n                                    name=\"payment\"\r\n                                    value={values.payment} readOnly\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        {\r\n                            values.payment === 'Credit Card' &&\r\n                            <Row className=\"g-3 mb-3\">\r\n                                <Form.Group controlId=\"card-no\">\r\n                                    <Form.Label>Credit Card Number</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"tel\"\r\n                                        name=\"cardNumber\"\r\n                                        value={values.cardNumber} readOnly\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"card-name\">\r\n                                    <Form.Label>Card Holder Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"cardHolder\"\r\n                                        value={values.cardHolder} readOnly\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"expiry-date\">\r\n                                    <Form.Label>Expiry Date (YYYY-MM)</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"month\"\r\n                                        name=\"expiryDate\"\r\n                                        value={new Date().toISOString().slice(0, 7)} readOnly\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"cvv\">\r\n                                    <Form.Label>CVV</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"tel\"\r\n                                        inputMode=\"numeric\"\r\n                                        name=\"cvv\"\r\n                                        value={values.cvv} readOnly\r\n                                    />\r\n                                </Form.Group>\r\n                            </Row>\r\n                        }\r\n\r\n                        <hr className='my-4' />\r\n\r\n                        {\r\n                            values.notes.length > 0 &&\r\n                            <>\r\n                                <Form.Group>\r\n                                    <Form.Label>Notes</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        name=\"notes\"\r\n                                        value={values.notes} readOnly\r\n                                        maxLength=\"150\" />\r\n                                </Form.Group>\r\n\r\n                                <hr className='my-4' />\r\n                            </>\r\n\r\n                        }\r\n                        {(values.message.length > 0 || isAdmin) &&\r\n                            <Form.Group className=\"mb-3\" controlId=\"checkout-notes\">\r\n                                <Form.Label>Owner's Message (Max. 150 words)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"message\"\r\n                                    value={values.message}\r\n                                    onChange={handleChange} readOnly={!isAdmin}\r\n                                    maxLength=\"150\" />\r\n                            </Form.Group>}\r\n\r\n                        <Row>\r\n                            <Col md={7} className='mb-3 mb-md-0'>\r\n                                <InputGroup>\r\n                                    <InputGroup.Text>Submitted at</InputGroup.Text>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"createdAt\"\r\n                                        value={new Date(date)} readOnly\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n\r\n                            <Form.Group as={Col} md className='mb-3'>\r\n                                <InputGroup>\r\n                                    <InputGroup.Text>Status</InputGroup.Text>\r\n                                    <Form.Select\r\n                                        name=\"status\"\r\n                                        value={values.status}\r\n                                        disabled={!isAdmin}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"Pending\">Pending</option>\r\n                                        <option value=\"Delivering\">Delivering</option>\r\n                                        <option value=\"Completed\">Completed</option>\r\n                                        <option value=\"Cancelled\">Cancelled</option>\r\n                                    </Form.Select>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n\r\n                        </Row>\r\n\r\n                        {isAdmin && <Button type='submit' className='w-100 my-3'>Submit</Button>}\r\n\r\n\r\n                    </Form>\r\n                )\r\n            }\r\n\r\n\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default OrderDetail;","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Home from './pages/home';\n\nimport WebNav from \"./component/WebNav\";\nimport Footer from \"./component/Footer\";\nimport ActionSuccess from \"./pages/actionSuccess\";\nimport ActionFailure from \"./pages/actionFailure\";\n\nimport Login from './pages/login'\nimport Register from './pages/register';\nimport ModifyPassword from \"./pages/modifyPassword\";\n\nimport ManageProduct from \"./pages/manageProduct\";\nimport EditProduct from \"./pages/editProduct\";\nimport CreateProduct from \"./pages/createProduct\";\nimport ProductPage from './pages/productPage';\nimport ProductList from \"./pages/productList\";\nimport SearchResult from \"./pages/searchResult\";\n\nimport Cart from \"./pages/cart\";\nimport CheckoutPage from \"./pages/checkoutPage\";\n\nimport ManageOrder from \"./pages/manageOrder\";\nimport OrderDetail from \"./pages/orderDetail\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"d-flex flex-column min-vh-100\">\n        <WebNav />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          \n          <Route path=\"/user/login\" element={<Login />} />\n          <Route path=\"/user/register\" element={<Register />} />\n          <Route path='/user/modify-password' element={<ModifyPassword />} />\n\n          <Route path=\"/product/item/:pid\" element={<ProductPage />} />\n          <Route path=\"/product/category/:category\" element={<ProductList />} />\n          <Route path=\"/product/search/:keyword\" element={<SearchResult />} />\n          <Route path='/product/manage' element={<ManageProduct />} />\n          <Route path='/product/edit/:pid' element={<EditProduct />} />\n          <Route path='/product/create' element={<CreateProduct />} />\n          \n          <Route path=\"/cart\" element={<Cart />} />\n          <Route path='/checkout' element={<CheckoutPage />} />\n          <Route path='/success' element={<ActionSuccess />} />\n          <Route path='/error' element={<ActionFailure />} />\n\n          <Route path='/order' element={<ManageOrder />} />\n          <Route path='/order/:orderId' element={<OrderDetail />} />\n\n        </Routes>\n        <div className=\"mt-auto\">\n          <Footer />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport 'animate.css';\nimport { StoreProvider } from './store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}